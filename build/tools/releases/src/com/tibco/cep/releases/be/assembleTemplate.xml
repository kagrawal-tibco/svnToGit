<?xml version="1.0" encoding="ISO-8859-1"?>
<!--



=======>    DO NOT MODIFY assemble.xml !   <=======
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^


                    assemble.xml
                  is generated from
                   a template file
                        named

                 assembleTemplate.xml




-->
<project name="package" default="build-assemblies">
	<property environment="env" />
	<property file="build.properties" />

	<target name="clean-assemblies">
		<delete dir="${be.exp}/Final"/>
	</target>

	<target name="clean-assemblies-ga">
		<delete dir="${be.exp}/Final_GA"/>
	</target>

	<target name="import-doc-eclipse-by-name">
		<if>
			<equals arg1="${product-name-suffix}" arg2="process"/>
			<then>
				<copy todir="${be.exp}/Final/${assembly-path}/studio/eclipse/plugins" overwrite="true">
				<fileset dir="${env.DOC_HOME}/businessevents-${product-name-suffix}/${BE_BPMN_VERSION}/release/Eclipse">
					<include name="*.jar"/>
				</fileset>
				</copy>
			</then>
			<else>
				<copy todir="${be.exp}/Final/${assembly-path}/studio/eclipse/plugins" overwrite="true">
				<fileset dir="${env.DOC_HOME}/businessevents-${product-name-suffix}/${BE_VERSION}/release/Eclipse">
					<include name="*.jar"/>
				</fileset>
				</copy>
			</else>
		</if>
	</target>

	<!-- ================ -->
	<!-- build-assemblies -->
	<!-- ================ -->

	<target name="build-assemblies" depends="clean-assemblies,
    build-assemblies-be_backingstore,
    build-assemblies-be_datamodeling_examples,
    build-assemblies-be_dbconcepts,
    build-assemblies-be_decisionmanager,
    build-assemblies-be_decisionmanager_examples,
    build-assemblies-be_eclipse,
    build-assemblies-be_eventstreamprocessing_examples,
    build-assemblies-be_express_examples,
    build-assemblies-be_monitoringandmanagement,
    build-assemblies-be_pattern,
	build-assemblies-be_process_examples,
	build-assemblies-be_process_editor,
	build-assemblies-be_process_server,	
    build-assemblies-be_query,
    build-assemblies-be_rulesmanagement,
    build-assemblies-be_server,
    build-assemblies-be_standard_examples,
    build-assemblies-be_statemodeler,
    build-assemblies-be_studio,
	build-assemblies-be_views_examples,
    build-assemblies-be_views_modeler,
    build-assemblies-be_views_server,
    build-assemblies-PORTs">
		<chmod dir="${be.exp}/Final" perm="755" includes="**/*" maxparallel="500" />
	</target>

	<target name="build-assemblies-be_backingstore">
		<mkdir dir="${be.exp}/Final/${env.PORT}/be_backingstore/lib"/>
		<copy todir="${be.exp}/Final/${env.PORT}/be_backingstore/lib">
			<fileset dir="${lib.exp}">
				<include name="cep-as-channel.jar"/>
				<include name="cep-backingstore.jar"/>
				<include name="cep-backingstore-bdb.jar"/>
				<include name="cep-datagrid-oracle.jar"/>
				<include name="cep-datagrid-tibco.jar"/>
				<include name="cep-hawk-channel.jar"/>
				<include name="cep-migration.jar"/>
			</fileset>
		</copy>

		<mkdir dir="${be.exp}/Final/${env.PORT}/be_backingstore/bin"/>
		<copy todir="${be.exp}/Final/${env.PORT}/be_backingstore/bin">
			<fileset dir="${be.exp}/bin">
				<include name="base_types.xml"/>
				<include name="be-jdbcdeploy.tra"/>
				<include name="be-migration.tra"/>
				<include name="create_tables_ansi.sql"/>
				<include name="create_tables_oracle.sql"/>
				<include name="create_tables_mysql.sql"/>
				<include name="create_tables_postgres.sql"/>
				<include name="create_tables_sqlserver.sql"/>
				<include name="create_tables_db2.sql"/>
				<include name="dbkeywordmap.xml"/>
				<include name="initialize_database_oracle.sql"/>
				<include name="initialize_database_sqlserver.sql"/>
				<include name="initialize_database_mysql.sql"/>
				<include name="initialize_database_postgres.sql"/>
			</fileset>
			<fileset dir="${common.src}">
				<include name="BEMMTopology.xsd" />
			</fileset>
		</copy>

		<mkdir dir="${be.exp}/Final/${env.PORT}/be_backingstore/studio"/>
		<copy todir="${be.exp}/Final/${env.PORT}/be_backingstore/studio">
			<fileset dir="${studio.exp}/studio">
				<include name="**/com.tibco.cep.studio.cluster.topology*.jar"/>
				<include name="**/com.tibco.cep.sharedresource.ascon*.jar"/>
				<include name="**/com.tibco.cep.sharedresource.hawk*.jar"/>
			</fileset>
		</copy>

		<mkdir dir="${be.exp}/Final/${env.PORT}/be_backingstore/examples"/>
		<copy todir="${be.exp}/Final/${env.PORT}/be_backingstore/examples">
			<fileset dir="${be.exp}/examples">
				<include name="standard/FraudDetectionCache/**" />
				<include name="standard/FraudDetectionStore/**" />
				<include name="standard/Locking/**" />
			</fileset>
		</copy>

		<mkdir dir="${be.exp}/Final/${env.PORT}/be_backingstore/uninstaller_scripts"/>
		<copy todir="${be.exp}/Final/${env.PORT}/be_backingstore/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-backingstore-install.xml"/>
				<include name="pre-backingstore-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-be_datamodeling_examples">
		<mkdir dir="${be.exp}/Final/be_datamodeling_examples"/>
		<!--<copy todir="${be.exp}/Final/be_datamodeling_documentation">
			<fileset dir="${doc.exp}/doc_be_data_mod">
				<include name="doc/**"/>
			</fileset>
		</copy>-->
		<copy todir="${be.exp}/Final/be_datamodeling_examples/examples">
			<fileset dir="${be.exp}/examples">
				<include name="data_modeling/**" />
			</fileset>
		</copy>
		<copy todir="${be.exp}/Final/be_datamodeling_examples/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-datamodeling_documentation-install.xml"/>
				<include name="pre-datamodeling_documentation-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-be_dbconcepts">
		<mkdir dir="${be.exp}/Final/be_dbconcepts/lib"/>
		<copy todir="${be.exp}/Final/be_dbconcepts/lib">
			<fileset dir="${lib.exp}">
				<include name="cep-modules.jar"/>
			</fileset>
			<fileset dir="${studio.exp}/studio">
				<include name="eclipse/plugins/com.tibco.cep.datamodeling.common*.jar"/>
				<exclude name="**/un-obf/**"/>
			</fileset>
		</copy>
		<!--  Install DB concepts related Studio plugins -->
		<copy todir="${be.exp}/Final/be_dbconcepts/studio">
			<fileset dir="${studio.exp}/studio">
				<include name="**/com.tibco.cep.datamodeling*.jar"/>
				<include name="**/com.tibco.cep.studio.dbconcept*.jar"/>
				<exclude name="**/un-obf/**"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-be_decisionmanager">
		<mkdir dir="${be.exp}/Final/${env.PORT}/be_decisionmanager/decisionmanager"/>
		<copy todir="${be.exp}/Final/${env.PORT}/be_decisionmanager/decisionmanager">
			<fileset dir="${be.exp}/decisionmanager">
				<include name="*/**"/>
			</fileset>
		</copy>
		<copy todir="${be.exp}/Final/${env.PORT}/be_decisionmanager/lib">
			<fileset dir="${studio.exp}/studio">
				<include name="eclipse/plugins/com.tibco.cep.decision.table.common*.jar"/>
				<exclude name="**/un-obf/**"/>
			</fileset>
		</copy>
		<mkdir dir="${be.exp}/Final/${env.PORT}/be_decisionmanager/studio/eclipse/plugins"/>
		<copy todir="${be.exp}/Final/${env.PORT}/be_decisionmanager/studio">
			<fileset dir="${studio.exp}/studio">
				<include name="**/com.tibco.cep.decision*.jar"/>
				<exclude name="**/un-obf/**"/>
			</fileset>
		</copy>
		<!--
		<antcall target="import-doc-eclipse-by-name">
			<param name="bundle-name" value="com.tibco.be_decision_manager.help.doc" />
			<param name="assembly-path" value="${env.PORT}/be_decisionmanager" />
			<param name="product-name-suffix" value="decisionmanager" />
			<param name="product-display-name" value="BusinessEvents Decision Manager Documentation" />
		</antcall>
		-->
		<copy todir="${be.exp}/Final/${env.PORT}/be_decisionmanager/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-decisionmanager-install.xml"/>
				<include name="pre-decisionmanager-uninstall.xml"/>
			</fileset>
		</copy>
		
		<antcall target="import-repo-by-name">
			<param name="destination" value="${be.exp}/Final/${env.PORT}/be_decisionmanager/studio" />
			<param name="source" value="decisionmanager" />
		</antcall>
	</target>

	<target name="build-assemblies-be_decisionmanager_examples">
		<mkdir dir="${be.exp}/Final/be_decisionmanager_examples"/>
		<!--<copy todir="${be.exp}/Final/be_decisionmanager_documentation">
			<fileset dir="${doc.exp}/doc_be_dec_man">
				<include name="doc/**"/>
			</fileset>
		</copy>-->
		<copy todir="${be.exp}/Final/be_decisionmanager_examples/examples">
			<fileset dir="${be.exp}/examples">
				<include name="decision_manager/**" />
				<exclude name="decision_manager/OrderDemo/**" />
			</fileset>
		</copy>
		<copy todir="${be.exp}/Final/be_decisionmanager_examples/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-decisionmanager_documentation-install.xml"/>
				<include name="pre-decisionmanager_documentation-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-be_eclipse">
		<subant target="setup-eclipse-platform-base" inheritall="true">
			<property file="studio/build.properties"/>
			<fileset dir="." includes="studio/studio.xml"/>
		</subant>
	</target>

	<target name="build-assemblies-be_eventstreamprocessing_examples">
		<mkdir dir="${be.exp}/Final/be_eventstreamprocessing_examples"/>
		<!--<copy todir="${be.exp}/Final/be_eventstreamprocessing_documentation">
			<fileset dir="${doc.exp}/doc_be_esp">
				<include name="doc/**"/>
			</fileset>
		</copy>-->
		<copy todir="${be.exp}/Final/be_eventstreamprocessing_examples/examples">
			<fileset dir="${be.exp}/examples">
				<include name="event_stream_processing/**" />
			</fileset>
		</copy>
		<copy todir="${be.exp}/Final/be_eventstreamprocessing_examples/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-eventstreamprocessing_documentation-install.xml"/>
				<include name="pre-eventstreamprocessing_documentation-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-be_express_examples">
		<mkdir dir="${be.exp}/Final/be_express_examples"/>
		<!--<copy todir="${be.exp}/Final/be_express_documentation">
			<fileset dir="${doc.exp}/doc_be">
				<include name="doc/**"/>
			</fileset>
		</copy>-->
		<!--
		<antcall target="import-doc-eclipse-by-name">
			<param name="bundle-name" value="com.tibco.be_standard.help.doc" />
			<param name="assembly-path" value="be_express_documentation" />
			<param name="product-name-suffix" value="standard" />
			<param name="product-display-name" value="BusinessEvents Documentation" />
		</antcall>
		-->
		<copy todir="${be.exp}/Final/be_express_examples/examples">
			<fileset dir="${be.exp}/examples">
				<include name="_resources/**" />
				<include name="standard/**" />
				<exclude name="standard/ASChannel/**" />
				<exclude name="standard/ASChannelSimple/**" />
				<exclude name="standard/FraudDetectionCache/**" />
				<exclude name="standard/FraudDetectionStore/**" />
				<exclude name="standard/HawkChannel/**" />
				<exclude name="standard/LoadBalancer/**" />
				<exclude name="standard/Locking/**" />
				<exclude name="standard/WebStudio/**" />
			</fileset>
		</copy>
		
		<copy todir="${be.exp}/Final/be_express_examples/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-express_documentation-install.xml"/>
				<include name="pre-express_documentation-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-be_monitoringandmanagement">
		<mkdir dir="${be.exp}/Final/be_monitoringandmanagement/mm"/>
		<copy todir="${be.exp}/Final/be_monitoringandmanagement">
			<fileset dir="${be.exp}">
				<include name="mm/**"/>
				<exclude name="**/un-obf/**"/>
			</fileset>
		</copy>
		<mkdir dir="${be.exp}/Final/be_monitoringandmanagement/uninstaller_scripts"/>
		<copy todir="${be.exp}/Final/be_monitoringandmanagement/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-mm-install.xml"/>
				<include name="pre-mm-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-be_pattern">
		<mkdir dir="${be.exp}/Final/be_pattern/lib"/>
		<copy todir="${be.exp}/Final/be_pattern/lib">
			<fileset dir="${lib.exp}">
				<include name="cep-pattern.jar"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-be_process_examples">
		<mkdir dir="${be.exp}/Final/be_process_examples"/>
		<!--<copy todir="${be.exp}/Final/be_process_documentation">
			<fileset dir="${doc.exp}/doc_be_process">
				<include name="doc/**"/>
				<exclude name="**/TIB_businessevents-processorchestration_5.1.0_license.pdf"/>
			</fileset>
		</copy>-->
		<copy todir="${be.exp}/Final/be_process_examples/examples">
			<fileset dir="${be.exp}/examples">
				<include name="process/**" />
			</fileset>
		</copy>
		<copy todir="${be.exp}/Final/be_process_examples/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-process_documentation-install.xml"/>
				<include name="pre-process_documentation-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-be_process_editor">
		<copy todir="${be.exp}/Final/${env.PORT}/be_process_editor/studio">
			<fileset dir="${studio.exp}/studio">
				<include name="**/com.tibco.cep.bpmn*.jar"/>
			</fileset>
		</copy>
		
		<antcall target="import-repo-by-name">
			<param name="destination" value="${be.exp}/Final/${env.PORT}/be_process_editor/studio" />
			<param name="source" value="process" />
		</antcall>
		<!--
		<antcall target="import-doc-eclipse-by-name">
			<param name="bundle-name" value="com.tibco.be_process.help.doc" />
			<param name="assembly-path" value="${env.PORT}/be_process_editor" />
			<param name="product-name-suffix" value="process" />
			<param name="product-display-name" value="BusinessEvents Process Documentation" />
		</antcall>
		-->
	</target>

	<target name="build-assemblies-be_process_server">
		<mkdir dir="${be.exp}/Final/be_process_server/lib"/>
		<copy todir="${be.exp}/Final/be_process_server/lib">
			<fileset dir="${lib.exp}">
				<include name="cep-bpmn.jar"/>
			</fileset>
		</copy>
		<copy todir="${be.exp}/Final/be_process_server/lib">
			<fileset dir="${studio.exp}/studio">
				<include name="eclipse/plugins/com.tibco.cep.bpmn.common*.jar"/>
				<exclude name="**/un-obf/**"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-be_query">
		<mkdir dir="${be.exp}/Final/be_query/lib"/>
		<copy todir="${be.exp}/Final/be_query/lib">
			<fileset dir="${lib.exp}">
				<include name="cep-query.jar"/>
			</fileset>
			<fileset dir="${studio.exp}/studio">
				<include name="eclipse/plugins/com.tibco.cep.eventstreamprocessing.common*.jar"/>
				<exclude name="**/un-obf/**"/>
			</fileset>
		</copy>
		<!-- TODO: Need a separate assembly for this -->
		<copy todir="${be.exp}/Final/be_query/studio">
			<fileset dir="${studio.exp}/studio">
				<include name="**/com.tibco.cep.eventstreamprocessing*.jar"/>
				<exclude name="**/un-obf/**"/>
			</fileset>
		</copy>
		
		<antcall target="import-repo-by-name">
			<param name="destination" value="${be.exp}/Final/be_query/studio" />
			<param name="source" value="eventstreamprocessing" />
		</antcall>
		<!--
		<antcall target="import-doc-eclipse-by-name">
			<param name="bundle-name" value="com.tibco.be_event_stream_processing.help.doc" />
			<param name="assembly-path" value="be_query" />
			<param name="product-name-suffix" value="eventstreamprocessing" />
			<param name="product-display-name" value="BusinessEvents Event Stream Processing Documentation" />
		</antcall>
		-->
	</target>

	<target name="build-assemblies-be_rulesmanagement">
		<mkdir dir="${be.exp}/Final/be_rulesmanagement/rms"/>
		<copy todir="${be.exp}/Final/be_rulesmanagement">
			<fileset dir="${be.exp}">
				<include name="rms/**"/>
				<exclude name="**/un-obf/**"/>
			</fileset>
		</copy>
		<mkdir dir="${be.exp}/Final/be_rulesmanagement/uninstaller_scripts"/>
		<copy todir="${be.exp}/Final/be_rulesmanagement/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-rulesmanagement-install.xml"/>
				<include name="pre-rulesmanagement-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-be_server">
		<mkdir dir="${be.exp}/Final/be_server/lib/com/tibco/deployment"/>
		<copy todir="${be.exp}/Final/be_server/lib/com/tibco/deployment">
			<fileset dir="${be.exp}/lib/">
				<include name="be-engine.xml"/>
			</fileset>
		</copy>
		<mkdir dir="${be.exp}/Final/be_server/hotfix/lib"/>
		<copy todir="${be.exp}/Final/be_server">
			<fileset dir="${be.exp}">
				<include name="bin/be-engine.tra"/>
				<include name="hotfix/**"/>
			</fileset>
		</copy>
		<mkdir dir="${be.exp}/Final/be_server/admin-plugins"/>
		<copy todir="${be.exp}/Final/be_server/admin-plugins">
			<fileset dir="${lib.exp}">
				<include name="be-admin.jar"/>
			</fileset>
		</copy>
		
	<!--	<mkdir dir="${be.exp}/Final/be_server/lib/ext/tpcl" />
		<copy todir="${be.exp}/Final/be_server/lib/ext/tpcl">
			<fileset dir="${ga.dir}/be_server/lib/ext/tpcl">
				<include name="xalan.jar" />
			</fileset>
		</copy>-->
		
		<copy todir="${be.exp}/Final/be_server/lib">
			<fileset dir="${be.exp}">
				<include name="cep-analytics.jar"/>
				<include name="cep-ftl.jar" />
			</fileset>
			<fileset dir="${lib.exp}">
				<include name="be-functions.jar"/>
				<include name="be-studiofunctions.jar"/>
				<include name="cep-base.jar"/>
				<include name="cep-common.jar"/>
				<include name="cep-container.jar"/>
				<include name="cep-drivers.jar"/>
				<include name="cep-interpreter.jar"/>
				<include name="cep-kernel.jar"/>
				<include name="cep-loadbalancer.jar"/>
				<include name="cep-sb-channel.jar"/>
				<include name="cep-security.jar"/>
				<include name="cep-ui-rt-common.jar"/>
				<!-- <include name="cep-analytics.jar"/> Changes made for including cep-analytics.jar - Archit -->
			</fileset>
			<fileset dir="${lib.exp}">
				<include name="ext/**"/>
				<exclude name="ext/as-*"/>
				<exclude name="ext/libas*"/>
				<exclude name="**/un-obf/**"/>
			</fileset>
		</copy>
		<copy todir="${be.exp}/Final/be_server/lib/palettes">
			<fileset dir="${lib.exp}/palettes">
				<include name="be-bw.jar"/>
			</fileset>
		</copy>
		<mkdir dir="${be.exp}/Final/be_server/lib"/>
		<copy todir="${be.exp}/Final/be_server/lib">
			<fileset dir="${studio.exp}/studio">
				<include name="eclipse/plugins/com.tibco.cep.tra*.jar"/>
				<exclude name="**/un-obf/**"/>
			</fileset>
		</copy>
		<copy todir="${be.exp}/Final/be_server/bin">
			<fileset dir="${common.src}">
				<include name="cdd-5.1.xsd" />
			</fileset>
		</copy>

		<mkdir dir="${be.exp}/Final/be_server/uninstaller_scripts"/>
		<copy todir="${be.exp}/Final/be_server/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-server-install.xml"/>
				<include name="pre-server-uninstall.xml"/>
				<include name="post-install.properties"/>
				<include name="common-tasks.xml"/>
			</fileset>
		</copy>
		<if>
			<not>
				<equals arg1="${env.BE_LICENSE}" arg2=""/>
			</not>
			<then>
				<copy todir="${be.exp}/Final/be_server">
					<fileset dir="${env.SRC_ROOT}/build/engg_build">
						<include name="engg-build.readme"/>
						<include name="engg-fix.readme"/>
					</fileset>
				</copy>
			</then>
		</if>
	</target>

	<target name="build-assemblies-be_standard_examples">
		<mkdir dir="${be.exp}/Final/be_standard_examples"/>
		<!--<copy todir="${be.exp}/Final/be_standard_documentation">
			<fileset dir="${doc.exp}/doc_be">
				<include name="doc/**"/>
			</fileset>
		</copy>-->
		<!--
		<antcall target="import-doc-eclipse-by-name">
			<param name="bundle-name" value="com.tibco.be_standard.help.doc" />
			<param name="assembly-path" value="be_standard_documentation" />
			<param name="product-name-suffix" value="standard" />
			<param name="product-display-name" value="BusinessEvents Documentation" />
		</antcall>
		-->
		<copy todir="${be.exp}/Final/be_standard_examples/examples">
			<fileset dir="${be.exp}/examples">
				<include name="_resources/**" />
				<include name="standard/**" />
				<exclude name="standard/FraudDetectionCache/**" />
				<exclude name="standard/FraudDetectionStore/**" />
				<exclude name="standard/Locking/**" />
			</fileset>
		</copy>
		<copy todir="${be.exp}/Final/be_standard_examples/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-standard_documentation-install.xml"/>
				<include name="pre-standard_documentation-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-be_statemodeler">
		<mkdir dir="${be.exp}/Final/${env.PORT}/be_statemodeler/studio"/>
		<copy todir="${be.exp}/Final/${env.PORT}/be_statemodeler/studio">
			<fileset dir="${studio.exp}/studio">
				<include name="**/com.tibco.cep.studio.ui.statemachine*.jar"/>
				<exclude name="**/un-obf/**"/>
			</fileset>
		</copy>
		<antcall target="import-repo-by-name">
			<param name="destination" value="${be.exp}/Final/${env.PORT}/be_statemodeler/studio" />
			<param name="source" value="datamodeling" />
		</antcall>
		<!--
		<antcall target="import-doc-eclipse-by-name">
			<param name="bundle-name" value="com.tibco.be_data_modeling.help.doc" />
			<param name="assembly-path" value="${env.PORT}/be_statemodeler" />
			<param name="product-name-suffix" value="datamodeling" />
			<param name="product-display-name" value="BusinessEvents Data Modeling Documentation" />
		</antcall>
		-->
	</target>

	<target name="build-assemblies-be_studio">
		<mkdir dir="${be.exp}/Final/${env.PORT}/be_studio/studio"/>
		<copy todir="${be.exp}/Final/${env.PORT}/be_studio/studio">
			<fileset dir="${studio.exp}/studio">
				<include name="*/**"/>
				<!-- Exclude Add-on plugins (BackingStore/Non-Express, Data Modeling, Decision Manager, ESP, Process, Views) -->
				<exclude name="**/com.tibco.cep.bpmn.*.jar"/>
				<exclude name="**/com.tibco.cep.datamodeling*.jar"/>
				<exclude name="**/com.tibco.cep.decision*.jar"/>
				<exclude name="**/com.tibco.cep.eventstreamprocessing*.jar"/>
				<exclude name="**/com.tibco.cep.sharedresource.ascon*.jar"/>
				<exclude name="**/com.tibco.cep.sharedresource.hawk*.jar"/>
				<exclude name="**/com.tibco.cep.studio.dbconcept*.jar"/>
				<exclude name="**/com.tibco.cep.studio.dashboard*.jar"/>
				<exclude name="**/com.tibco.cep.studio.ui.statemachine*.jar"/>
				<exclude name="**/com.tibco.cep.studio.cluster.topology*.jar"/>  
				<exclude name="**/com.tibco.cep.studio.decision.table*.jar"/>  
				<exclude name="**/un-obf/**"/>
			</fileset>
		</copy>
		
		<!--Copying of com.tibco.xml* plugins is temporary and this should be copied from builder when official builds are provided for this-->
		<!--
		<copy todir="${be.exp}/Final/${env.PORT}/be_studio/studio/eclipse/plugins">
			<fileset dir="${env.SRC_ROOT}/build/studio/plugins/mapper">
				<include name="com.tibco.xml*"/>
			</fileset>
		</copy>
		-->
		
		<antcall target="import-repo-by-name">
			<param name="destination" value="${be.exp}/Final/${env.PORT}/be_studio/studio" />
			<param name="source" value="standard" />
		</antcall>
		
		<copy todir="${be.exp}/Final/${env.PORT}/be_studio/studio/repo">
			<fileset dir="${studio.src}/packaging/publishing">
				<include name="*"/>
			</fileset>
		</copy>

		<mkdir dir="${be.exp}/Final/${env.PORT}/be_studio/uninstaller_scripts"/>
		<copy todir="${be.exp}/Final/${env.PORT}/be_studio/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-studio-install.xml"/>
				<include name="pre-studio-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-be_views_examples">
		<mkdir dir="${be.exp}/Final/be_views_examples"/>
		<!--<copy todir="${be.exp}/Final/be_views_documentation">
			<fileset dir="${doc.exp}/doc_be_views">
				<include name="doc/**"/>
			</fileset>
		</copy>-->
		<copy todir="${be.exp}/Final/be_views_examples/examples">
			<fileset dir="${be.exp}/examples">
				<include name="views/**" />
			</fileset>
		</copy>
		<copy todir="${be.exp}/Final/be_views_examples/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-views_documentation-install.xml"/>
				<include name="pre-views_documentation-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-be_views_modeler">
		<mkdir dir="${be.exp}/Final/${env.PORT}/be_views_modeler"/>
		<mkdir dir="${be.exp}/Final/${env.PORT}/be_views_modeler/studio/eclipse/plugins"/>
		<copy todir="${be.exp}/Final/${env.PORT}/be_views_modeler/studio">
			<fileset dir="${studio.exp}/studio">
				<include name="**/com.tibco.cep.studio.dashboard*.jar"/>
				<exclude name="**/un-obf/**"/>
			</fileset>
		</copy>
		<antcall target="import-repo-by-name">
			<param name="destination" value="${be.exp}/Final/${env.PORT}/be_views_modeler/studio" />
			<param name="source" value="views" />
		</antcall>
		<!--
		<antcall target="import-doc-eclipse-by-name">
			<param name="bundle-name" value="com.tibco.be_views.help.doc" />
			<param name="assembly-path" value="${env.PORT}/be_views_modeler" />
			<param name="product-name-suffix" value="views" />
			<param name="product-display-name" value="BusinessEvents Views Documentation" />
		</antcall>
		-->
	</target>

	<target name="build-assemblies-be_views_server">
		<mkdir dir="${be.exp}/Final/be_views_server/views" />
		<copy todir="${be.exp}/Final/be_views_server">
			<fileset dir="${be.exp}">
				<include name="views/**"/>
				<exclude name="**/un-obf/**"/>
			</fileset>
		</copy>
		<copy todir="${be.exp}/Final/be_views_server/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-views_server-install.xml"/>
				<include name="pre-views_server-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-PORTs">
		<!-- This assumes that Win-32 build is already done. -->
		<if>
			<equals arg1="${env.WINDOWS_64BIT_PACKAGING_ENABLE}" arg2="true" />
			<then>
				<antcall target="import-backingstore-PORT">
					<param name="sourceOs" value="win" />
					<param name="port" value="win/x86_64" />
					<param name="importstudio" value="true" />
				</antcall>
				<subant target="build-assemblies-studio-win64" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
				</subant>
			</then>
		</if>

		<!-- This assumes that Lin-32 build is already done. -->
		<if>
			<equals arg1="${env.UNIX_ALL_PACKAGING_ENABLE}" arg2="true" />
			<then>
				<!-- win 64 port -->
				<!-- Change to create win/x86_64 assembly on linux -->
				<antcall target="import-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="win/x86_64" />
					<param name="importstudio" value="true" />
				</antcall>
				<subant target="build-assemblies-studio-win64" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
				</subant>
				
				<!-- linux 64  port -->
				<antcall target="import-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="linux26gl25/x86_64" />
					<param name="importstudio" value="true" />
				</antcall>
				<subant target="build-assemblies-studio-linux64" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
				</subant>
				
				<!-- macosx x86_64  port -->
				<antcall target="import-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="macosx/x86_64" />
					<param name="importstudio" value="true" />
				</antcall>
				<subant target="build-assemblies-studio-macosx_x86_64" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
				</subant>
				
				<!-- zLinux 64 port -->
				<antcall target="import-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="linux26gl24/s390x" />
					<param name="importstudio" value="true" />
				</antcall>
				<subant target="build-assemblies-studio-linux_s390x" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
                </subant>
	
				<!-- aix power_64 port -->
				<antcall target="import-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="aix61/power_64" />
					<param name="importstudio" value="true" />
				</antcall>
				<subant target="build-assemblies-studio-aix_power_64" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
                </subant>
				
				<!-- hpux ia64 port -->
				<antcall target="import-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="hpux112/ia64" />
					<param name="importstudio" value="true" />
				</antcall>
				<subant target="build-assemblies-studio-hpux_ia64" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
                </subant>
				
				<!-- solaris sparc64 port -->
				<antcall target="import-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="sol10/sparc_64" />
					<param name="importstudio" value="true" />
				</antcall>
				<subant target="build-assemblies-studio-sol_sparc64" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
                </subant>
				
				<!-- solaris x86_64 port -->
				<antcall target="import-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="sol10/x86_64" />
					<param name="importstudio" value="true" />
				</antcall>
				<subant target="build-assemblies-studio-sol_x86_64" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
                </subant>
				
			</then>
		</if>
	</target>

	<target name="import-backingstore-PORT">
		<mkdir dir="${be.exp}/Final/${port}/be_backingstore" />
		<copy todir="${be.exp}/Final/${port}/be_backingstore">
			<fileset dir="${be.exp}/Final/${sourceOs}/x86/be_backingstore">
				<include name="*/**"/>
				<exclude name="lib/ext/**" />
				<exclude name="studio/**" />
			</fileset>
		</copy>
		<if>
			<equals arg1="${importstudio}" arg2="true" />
			<then>
				<copy todir="${be.exp}/Final/${port}/be_backingstore">
					<fileset dir="${be.exp}/Final/${sourceOs}/x86/be_backingstore">
						<include name="studio/**"/>
					</fileset>
				</copy>
			</then>
		</if>
	</target>
	
	<!-- ============================ -->
	<!-- build-assemblies-servicepack -->
	<!-- ============================ -->

	<target name="build-assemblies-servicepack" depends="setup-servicepack-assemblies,
                                         build-assemblies-servicepack-be_backingstore,
										 build-assemblies-servicepack-be_dbconcepts,
                                         build-assemblies-servicepack-be_decisionmanager,
                                         build-assemblies-servicepack-be_monitoringandmanagement,
                                         build-assemblies-servicepack-be_pattern,
										 build-assemblies-servicepack-be_process_editor,
										 build-assemblies-servicepack-be_process_server,
                                         build-assemblies-servicepack-be_query,
                                         build-assemblies-servicepack-be_rulesmanagement,
                                         build-assemblies-servicepack-be_server,
                                         build-assemblies-servicepack-be_statemodeler,
                                         build-assemblies-servicepack-be_studio,
										 build-assemblies-servicepack-be_views_modeler,
                                         build-assemblies-servicepack-be_views_server,
										 build-assemblies-servicepack-be_datamodeling_examples,
										 build-assemblies-servicepack-be_decisionmanager_examples,
										 build-assemblies-servicepack-be_eventstreamprocessing_examples,
										 build-assemblies-servicepack-be_standard_examples,
										 build-assemblies-servicepack-be_express_examples,
										 build-assemblies-servicepack-be_process_examples,
										 build-assemblies-servicepack-be_views_examples,
										 build-assemblies-servicepack-PORTs">
	</target>
	
	<target name="clean-assemblies-servicepack" >
		<if>
			<available file="${be.exp}/Final_GA/Final"/>
			<then>
				<delete dir="${be.exp}/Final"/>
				<move file="${be.exp}/Final_GA/Final" todir="${be.exp}"/>
				<delete dir="${be.exp}/Final_GA"/>
			</then>
		</if>
	</target>

	<target name="setup-servicepack-assemblies" depends="clean-assemblies-ga">
		<property name="ga.dir" value="${be.exp}/Final_GA/Final"/>
		<move file="${be.exp}/Final" todir="${be.exp}/Final_GA"/>
	</target>
	
	<target name="build-assemblies-servicepack-be_backingstore">
        <!--%%${env.PORT}/be_backingstore%%-->
        <copy todir="${be.exp}/Final/${env.PORT}/be_backingstore/uninstaller_scripts">
            <fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
                <include name="post-backingstore-install.xml"/>
            	<include name="pre-backingstore-uninstall.xml"/>
            </fileset>
        </copy>
	</target>

	<target name="build-assemblies-servicepack-be_datamodeling_examples">
		<!--%%be_datamodeling_documentation%%-->
		<copy todir="${be.exp}/Final/be_datamodeling_examples/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-datamodeling_documentation-install.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-servicepack-be_dbconcepts">
        <!--%%be_dbconcepts%%-->
		<copy todir="${be.exp}/Final/be_dbconcepts/uninstaller_scripts">
            <fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
                <include name="post-dbconcepts-install.xml"/>
            	<include name="pre-dbconcepts-uninstall.xml"/>
            </fileset>
        </copy>
	</target>

	<target name="build-assemblies-servicepack-be_decisionmanager">
        <!--%%${env.PORT}/be_decisionmanager%%-->
		<copy todir="${be.exp}/Final/${env.PORT}/be_decisionmanager/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-decisionmanager-install.xml"/>
				<include name="pre-decisionmanager-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-servicepack-be_decisionmanager_examples">
		  <!--%%be_decisionmanager_documentation%%-->
		<copy todir="${be.exp}/Final/be_decisionmanager_examples/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-decisionmanager_documentation-install.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-servicepack-be_eventstreamprocessing_examples">
		 <!--%%be_eventstreamprocessing_documentation%%-->
		<copy todir="${be.exp}/Final/be_eventstreamprocessing_/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-eventstreamprocessing_documentation-install.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-servicepack-be_express_examples">
		<mkdir dir="${be.exp}/Final/be_express_examples" />
		<!--%%be_express_documentation%%-->
		<copy todir="${be.exp}/Final/be_express_examples/uninstaller_scripts">
            <fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
                <include name="post-express_documentation-install.xml"/>
            </fileset>
        </copy>
	</target>

	<target name="build-assemblies-servicepack-be_monitoringandmanagement">
        <!--%%be_monitoringandmanagement%%-->
		<copy todir="${be.exp}/Final/be_monitoringandmanagement/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-mm-install.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-servicepack-be_pattern">
        <!--%%be_pattern%%-->
	</target>
	
	<target name="build-assemblies-servicepack-be_process_examples">
		<!--%%be_process_documentation%%-->
		<copy todir="${be.exp}/Final/be_process_examples/uninstaller_scripts">
	        <fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
	            <include name="post-process_documentation-install.xml"/>
	        </fileset>
	    </copy>
	</target>
	
	<target name="build-assemblies-servicepack-be_process_editor">
		<!--%%${env.PORT}/be_process_editor%%-->
		<copy todir="${be.exp}/Final/${env.PORT}/be_process_editor/uninstaller_scripts">
	        <fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
	            <include name="post-process_editor-install.xml"/>
	        	<include name="pre-process_editor-uninstall.xml"/>
	        </fileset>
	    </copy>
	</target>
	
	<target name="build-assemblies-servicepack-be_process_server">
		<!--%%be_process_server%%-->
		<copy todir="${be.exp}/Final/be_process_server/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-process_server-install.xml"/>
				<include name="pre-process_server-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-servicepack-be_query">
        <!--%%be_query%%-->
	</target>

	<target name="build-assemblies-servicepack-be_rulesmanagement">
        <!--%%be_rulesmanagement%%-->
		<copy todir="${be.exp}/Final/be_rulesmanagement/rms/lib">
			<fileset dir="${ga.dir}/be_rulesmanagement/rms/lib">
				<include name="cep-rms.jar"/>
			</fileset>
		</copy>
		<copy todir="${be.exp}/Final/be_rulesmanagement/uninstaller_scripts">
            <fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
                <include name="post-rulesmanagement-install.xml"/>
            </fileset>
        </copy>
	</target>

	<target name="build-assemblies-servicepack-be_server">
        <!--%%be_server%%-->
		<copy todir="${be.exp}/Final/be_server/lib">
			<fileset dir="${studio.exp}/studio">
				<include name="eclipse/plugins/com.tibco.cep.tra*.jar"/>
				<exclude name="**/un-obf/**"/>
			</fileset>
			<fileset dir="${ga.dir}/be_server/lib">
				<include name="cep-container.jar*"/>
			</fileset>
		</copy>
		
		<copy todir="${be.exp}/Final/be_server/admin-plugins">
			<fileset dir="${ga.dir}/be_server/admin-plugins">
				<include name="be-admin.jar"/>
			</fileset>
		</copy>
		
		<copy todir="${be.exp}/Final/be_server/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="common-tasks.xml"/>
				<include name="post-server-install.xml"/>
				<include name="pre-server-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-servicepack-be_standard_examples">
        <!--%%be_standard_documentation%%-->
		<copy todir="${be.exp}/Final/be_standard_examples/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-standard_documentation-install.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-servicepack-be_statemodeler">
        <!--%%${env.PORT}/be_statemodeler%%-->
		<copy todir="${be.exp}/Final/${env.PORT}/be_statemodeler/uninstaller_scripts">
	        <fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
	            <include name="post-statemodeler-install.xml"/>
	        	<include name="pre-statemodeler-uninstall.xml"/>
	        </fileset>
	    </copy>
	</target>

	<target name="build-assemblies-servicepack-be_studio">
        <!--%%${env.PORT}/be_studio%%-->

        <copy todir="${be.exp}/Final/${env.PORT}/be_studio/">
            <fileset dir="${ga.dir}/${env.PORT}/be_studio/">
            	<include name="studio/eclipse/studio.ini*"/>
                <include name="studio/eclipse/plugins/com.tibco.cep.rt_*"/>
                <include name="studio/eclipse/plugins/com.tibco.cep.studio.application_*"/>
                <include name="studio/eclipse/plugins/com.tibco.cep.tpcl_*"/>
                <include name="studio/eclipse/plugins/com.tibco.cep.tra_*"/>
            </fileset>
        </copy>

		<copy todir="${be.exp}/Final/${env.PORT}/be_studio/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-studio-install.xml"/>
				<include name="pre-studio-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-servicepack-be_views_examples">
		 <!--%%be_views_documentation%%-->
		<copy todir="${be.exp}/Final/be_views_examples/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-views_documentation-install.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-servicepack-be_views_modeler">
        <!--%%${env.PORT}/be_views_modeler%%-->
		<copy todir="${be.exp}/Final/${env.PORT}/be_views_modeler/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-views_modeler-install.xml"/>
				<include name="pre-views_modeler-uninstall.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-servicepack-be_views_server">
        <!--%%be_views_server%%-->
		<copy todir="${be.exp}/Final/be_views_server/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}">
				<include name="post-views_server-install.xml"/>
				<include name="pre-views_server-uninstall.xml"/>
			</fileset>
		</copy>
	</target>
	
	<target name="build-assemblies-servicepack-PORTs">
		<!-- This assumes that Win-32 build is already done. -->
		<if>
			<equals arg1="${env.WINDOWS_64BIT_PACKAGING_ENABLE}" arg2="true" />
			<then>
				<antcall target="import-servicepack-backingstore-PORT">
					<param name="sourceOs" value="win" />
					<param name="port" value="win/x86_64" />
					<param name="importstudio" value="true" />
				</antcall>
				<subant target="build-assemblies-servicepack-studio-win64" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
				</subant>
			</then>
		</if>

		<!-- This assumes that Lin-32 build is already done. -->
		<if>
			<equals arg1="${env.UNIX_ALL_PACKAGING_ENABLE}" arg2="true" />
			<then>
				<antcall target="import-servicepack-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="linux26gl25/x86_64" />
					<param name="importstudio" value="true" />
				</antcall>
				<subant target="build-assemblies-servicepack-studio-linux64" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
				</subant>
				
				<antcall target="import-servicepack-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="macosx/x86_64" />
					<param name="importstudio" value="true" />
				</antcall>
				<subant target="build-assemblies-servicepack-studio-macosx64" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
				</subant>
				
				<!-- UNIX Ports -->
				<antcall target="import-servicepack-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="linux26gl24/s390x" />
					<param name="importstudio" value="true" />
				</antcall>
		
				<antcall target="import-servicepack-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="aix61/power_64" />
					<param name="importstudio" value="true" />
				</antcall>

				<antcall target="import-servicepack-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="hpux112/ia64" />
					<param name="importstudio" value="ture" />
				</antcall>
				
				<antcall target="import-servicepack-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="sol10/sparc_64" />
					<param name="importstudio" value="true" />
				</antcall>
				
				<antcall target="import-servicepack-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="sol10/x86_64" />
					<param name="importstudio" value="true" />
				</antcall>
				
				<subant target="build-assemblies-servicepack-studio-uinx-PORTS" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
				</subant>
								
			</then>
		</if>
	</target>


	<target name="import-servicepack-backingstore-PORT">
		<mkdir dir="${be.exp}/Final/${port}/be_backingstore" />
		<copy todir="${be.exp}/Final/${port}/be_backingstore">
			<fileset dir="${be.exp}/Final/${sourceOs}/x86/be_backingstore">
				<include name="*/**"/>
				<exclude name="hotfix/lib/ext/**" />
				<exclude name="lib/ext/**" />
				<exclude name="studio/**" />
			</fileset>
		</copy>
		<if>
			<equals arg1="${importstudio}" arg2="true" />
			<then>
				<copy todir="${be.exp}/Final/${port}/be_backingstore">
					<fileset dir="${be.exp}/Final/${sourceOs}/x86/be_backingstore">
						<include name="studio/**"/>
					</fileset>
				</copy>
			</then>
		</if>
	</target>
	
	<!-- ======================= -->
	<!-- build-assemblies-hotfix -->
	<!-- ======================= -->

	<target name="build-assemblies-hotfix" depends="setup-hotfix-assemblies,
                                         build-assemblies-hotfix-be_backingstore,
                                         build-assemblies-hotfix-be_dbconcepts,
                                         build-assemblies-hotfix-be_decisionmanager,
                                         build-assemblies-hotfix-be_monitoringandmanagement,
                                         build-assemblies-hotfix-be_pattern,
										 build-assemblies-hotfix-be_process_editor,
										 build-assemblies-hotfix-be_process_server,
                                         build-assemblies-hotfix-be_query,
                                         build-assemblies-hotfix-be_rulesmanagement,
                                         build-assemblies-hotfix-be_server,
                                         build-assemblies-hotfix-be_statemodeler,
                                         build-assemblies-hotfix-be_studio,
										 build-assemblies-hotfix-be_views_modeler,
                                         build-assemblies-hotfix-be_views_server,
										 build-assemblies-hotfix-be_views_examples,
										 build-assemblies-hotfix-be_eventstreamprocessing_examples,
										 build-assemblies-hotfix-PORTs">
	</target>

	<target name="setup-hotfix-assemblies" depends="clean-assemblies-ga">
		<property name="ga.dir" value="${be.exp}/Final_GA/Final"/>
		<move file="${be.exp}/Final" todir="${be.exp}/Final_GA"/>
	</target>

	<target name="build-assemblies-hotfix-be_backingstore">
        <!--%%${env.PORT}/be_backingstore%%-->
		<copy todir="${be.exp}/Final/${env.PORT}/be_backingstore/">
			<fileset dir="${ga.dir}/${env.PORT}/be_backingstore/">
				<include name="lib/cep-backingstore.jar"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-hotfix-be_datamodeling_examples">
		<copy todir="${be.exp}/Final/be_datamodeling_examples/hotfix">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/bom/${BE_VERSION}/hf${BE_VERSION_HOTFIX}">
				<include name="TIB_businessevents-datamodeling_${BE_VERSION}_HF-00${BE_VERSION_HOTFIX}_readme.txt"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-hotfix-be_dbconcepts">
        <!--%%be_dbconcepts%%-->
	</target>

	<target name="build-assemblies-hotfix-be_decisionmanager">
        <!--%%${env.PORT}/be_decisionmanager%%-->
		<!--<copy todir="${be.exp}/Final/${env.PORT}/be_decisionmanager/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}-hf">
				<include name="post-decisionmanager-install.xml"/>
			</fileset>
		</copy>-->
	</target>

	<target name="build-assemblies-hotfix-be_decisionmanager_examples">
		<copy todir="${be.exp}/Final/be_decisionmanager_examples/hotfix">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/bom/${BE_VERSION}/hf${BE_VERSION_HOTFIX}">
				<include name="TIB_businessevents-decisionmanager_${BE_VERSION}_HF-00${BE_VERSION_HOTFIX}_readme.txt"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-hotfix-be_eventstreamprocessing_examples">
		<!--%%be_eventstreamprocessing_documentation%%-->
	</target>

	<target name="build-assemblies-hotfix-be_express_examples">
		<copy todir="${be.exp}/Final/be_express_examples/hotfix">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/bom/${BE_VERSION}/hf${BE_VERSION_HOTFIX}">
				<include name="TIB_businessevents-standard_${BE_VERSION}_HF-00${BE_VERSION_HOTFIX}_readme.txt"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-hotfix-be_monitoringandmanagement">
        <!--%%be_monitoringandmanagement%%-->
		<copy todir="${be.exp}/Final/be_monitoringandmanagement/">
			<fileset dir="${ga.dir}/be_monitoringandmanagement/">
				<include name="mm/bin/MM.ear*"/>
			</fileset>
		</copy>
		<!--<copy todir="${be.exp}/Final/be_monitoringandmanagement/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}-hf">
				<include name="post-mm-install.xml"/>		
			</fileset>
		</copy>-->
	</target>

	<target name="build-assemblies-hotfix-be_pattern">
        <!--%%be_pattern%%-->
	</target>
	
	<target name="build-assemblies-hotfix-be_process_examples">
		<copy todir="${be.exp}/Final/be_process_examples/hotfix">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/bom/${BE_VERSION}/hf${BE_VERSION_HOTFIX}">
				<include name="TIB_businessevents-process_${BE_BPMN_VERSION}_HF-00${BE_VERSION_HOTFIX}_readme.txt"/>
			</fileset>
		</copy>
	</target>
	<target name="build-assemblies-hotfix-be_process_editor">
		<!--%%${env.PORT}/be_process_editor%%-->
	</target>
	<target name="build-assemblies-hotfix-be_process_server">
		<!--%%be_process_server%%-->
	</target>

	<target name="build-assemblies-hotfix-be_query">
        <!--%%be_query%%-->
	</target>

	<target name="build-assemblies-hotfix-be_rulesmanagement">
        <!--%%be_rulesmanagement%%-->
		<copy todir="${be.exp}/Final/be_rulesmanagement/">
		<fileset dir="${ga.dir}/be_rulesmanagement/">
				<include name="rms/lib/cep-rms.jar*"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-hotfix-be_server">
        <!--%%be_server%%-->
		
		<copy todir="${be.exp}/Final/be_server/">
			<fileset dir="${ga.dir}/be_server/">
				<include name="lib/cep-container.jar*"/>
			</fileset>
		</copy>
		<copy todir="${be.exp}/Final/be_server/">
			<fileset dir="${ga.dir}/be_server/">
				<include name="admin-plugins/be-admin.jar"/>
			</fileset>
		</copy>
	</target>

	<target name="build-assemblies-hotfix-be_standard_examples">
        <!--%%be_standard_documentation%%-->
		<copy todir="${be.exp}/Final/be_standard_examples/hotfix">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/bom/${BE_VERSION}/hf${BE_VERSION_HOTFIX}">
				<include name="TIB_businessevents-standard_${BE_VERSION}_HF-00${BE_VERSION_HOTFIX}_readme.txt"/>
			</fileset>
		</copy>	
	</target>

	<target name="build-assemblies-hotfix-be_statemodeler">
        <!--%%${env.PORT}/be_statemodeler%%-->
	</target>

	<target name="build-assemblies-hotfix-be_studio">
        <!--%%${env.PORT}/be_studio%%-->
		
		<copy todir="${be.exp}/Final/${env.PORT}/be_studio/">
            <fileset dir="${ga.dir}/${env.PORT}/be_studio/">
                <include name="studio/eclipse/plugins/com.tibco.cep.studio.application_*"/>
            </fileset>
        </copy>
	</target>

	<target name="build-assemblies-hotfix-be_views_examples">
		<!--%%be_views_documentation%%-->	
	</target>

	<target name="build-assemblies-hotfix-be_views_modeler">
        <!--%%${env.PORT}/be_views_modeler%%-->
		<!--<copy todir="${be.exp}/Final/${env.PORT}/be_views_modeler/uninstaller_scripts">
			<fileset dir="${env.SRC_ROOT}/build/pkg_info/post-install-scripts-${BE_VERSION}-hf">
				<include name="post-views-install.xml"/>
			</fileset>
		</copy>-->
	</target>

	<target name="build-assemblies-hotfix-be_views_server">
        <!--%%be_views_server%%-->
	</target>

	<target name="build-assemblies-hotfix-PORTs">
		<!-- This assumes that Win-32 build is already done. -->
		<if>
			<equals arg1="${env.WINDOWS_64BIT_PACKAGING_ENABLE}" arg2="true" />
			<then>
				<antcall target="import-hotfix-backingstore-PORT">
					<param name="sourceOs" value="win" />
					<param name="port" value="win/x86_64" />
					<param name="importstudio" value="true" />
				</antcall>
				<subant target="build-assemblies-hotfix-studio-win64" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
				</subant>
			</then>
		</if>

		<!-- This assumes that Lin-32 build is already done. -->
		<if>
			<equals arg1="${env.UNIX_ALL_PACKAGING_ENABLE}" arg2="true" />
			<then>
				<antcall target="import-hotfix-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="linux26gl25/x86_64" />
					<param name="importstudio" value="true" />
				</antcall>
				<subant target="build-assemblies-hotfix-studio-linux64" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
				</subant>
				
				<antcall target="import-hotfix-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="macosx/x86_64" />
					<param name="importstudio" value="true" />
				</antcall>
				<subant target="build-assemblies-hotfix-studio-macosx64" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
				</subant>
				
				<antcall target="import-hotfix-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="linux26gl24/s390x" />
					<param name="importstudio" value="true" />
				</antcall>
			
				<antcall target="import-hotfix-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="aix61/power_64" />
					<param name="importstudio" value="true" />
				</antcall>
				
				<antcall target="import-hotfix-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="hpux112/ia64" />
					<param name="importstudio" value="true" />
				</antcall>

				<antcall target="import-hotfix-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="sol10/sparc" />
					<param name="importstudio" value="true" />
				</antcall>
				<antcall target="import-hotfix-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="sol10/sparc_64" />
					<param name="importstudio" value="true" />
				</antcall>
				<antcall target="import-hotfix-backingstore-PORT">
					<param name="sourceOs" value="linux26gl25" />
					<param name="port" value="sol10/x86_64" />
					<param name="importstudio" value="true" />
				</antcall>
				
				<subant target="build-assemblies-hotfix-studio-uinx-PORTS" inheritall="true">
					<property file="studio/build.properties"/>
					<fileset dir="." includes="studio/studio.xml"/>
				</subant>
			</then>
		</if>
	</target>


	<target name="import-hotfix-backingstore-PORT">
		<mkdir dir="${be.exp}/Final/${port}/be_backingstore" />
		<copy todir="${be.exp}/Final/${port}/be_backingstore">
			<fileset dir="${be.exp}/Final/${sourceOs}/x86/be_backingstore">
				<include name="*/**"/>
				<exclude name="hotfix/lib/ext/**" />
				<exclude name="lib/ext/**" />
				<exclude name="studio/**" />
			</fileset>
		</copy>
		<if>
			<equals arg1="${importstudio}" arg2="true" />
			<then>
				<copy todir="${be.exp}/Final/${port}/be_backingstore">
					<fileset dir="${be.exp}/Final/${sourceOs}/x86/be_backingstore">
						<include name="studio/**"/>
					</fileset>
				</copy>
			</then>
		</if>
	</target>
	
	<!-- ===================== -->
	<!-- build-studio-site-dev -->
	<!-- ===================== -->
	
	<target name="build-studio-site-dev" depends="build-assemblies">
		<!--TODO Call build-assemblies-servicepack/build-assemblies-hotix--> 
		<subant target="build-studio-site-dev" inheritall="true">
			<property file="studio/build.properties"/>
			<fileset dir="." includes="studio/studio.xml"/>
		</subant>
	</target>

	<target name="build-studio-site">
		<subant target="build-studio-site" inheritall="true">
			<property file="studio/build.properties"/>
			<fileset dir="." includes="studio/studio.xml"/>
		</subant>
	</target>

	<!-- Studio repo -->
	<target name="import-repo-by-name">
		<copy todir="${destination}/repo" overwrite="true">
			<fileset dir="${be.exp}/studio-repo">
				<include name="${source}/**"/>
			</fileset>
		</copy>
	</target>
</project>

