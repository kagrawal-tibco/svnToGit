//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.06.19 at 08:51:44 PM PDT 
//


package com.tibco.cep.studio.tester.core.model;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.tibco.cep.studio.tester.core.model package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _OldValue_QNAME = new QName("www.tibco.com/be/studio/tester", "oldValue");
    private final static QName _Concept_QNAME = new QName("www.tibco.com/be/studio/tester", "Concept");
    private final static QName _ReteObject_QNAME = new QName("www.tibco.com/be/studio/tester", "ReteObject");
    private final static QName _ExecutionObject_QNAME = new QName("www.tibco.com/be/studio/tester", "ExecutionObject");
    private final static QName _NewValue_QNAME = new QName("www.tibco.com/be/studio/tester", "newValue");
    private final static QName _Event_QNAME = new QName("www.tibco.com/be/studio/tester", "Event");
    private final static QName _OperationObject_QNAME = new QName("www.tibco.com/be/studio/tester", "OperationObject");
    private final static QName _TesterResults_QNAME = new QName("www.tibco.com/be/studio/tester", "TesterResults");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.tibco.cep.studio.tester.core.model
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ReteObjectType }
     * 
     */
    public ReteObjectType createReteObjectType() {
        return new ReteObjectType();
    }

    /**
     * Create an instance of {@link EntityType }
     * 
     */
    public EntityType createEntityType() {
        return new EntityType();
    }

    /**
     * Create an instance of {@link ConceptType }
     * 
     */
    public ConceptType createConceptType() {
        return new ConceptType();
    }

    /**
     * Create an instance of {@link TesterResultsDatatype }
     * 
     */
    public TesterResultsDatatype createTesterResultsDatatype() {
        return new TesterResultsDatatype();
    }

    /**
     * Create an instance of {@link InvocationObjectType }
     * 
     */
    public InvocationObjectType createInvocationObjectType() {
        return new InvocationObjectType();
    }

    /**
     * Create an instance of {@link TesterResultsType }
     * 
     */
    public TesterResultsType createTesterResultsType() {
        return new TesterResultsType();
    }

    /**
     * Create an instance of {@link TesterResultsOperation }
     * 
     */
    public TesterResultsOperation createTesterResultsOperation() {
        return new TesterResultsOperation();
    }

    /**
     * Create an instance of {@link ExecutionObjectType }
     * 
     */
    public ExecutionObjectType createExecutionObjectType() {
        return new ExecutionObjectType();
    }

    /**
     * Create an instance of {@link CausalObjectsType }
     * 
     */
    public CausalObjectsType createCausalObjectsType() {
        return new CausalObjectsType();
    }

    /**
     * Create an instance of {@link OntologyObjectType }
     * 
     */
    public OntologyObjectType createOntologyObjectType() {
        return new OntologyObjectType();
    }

    /**
     * Create an instance of {@link InvocationObjectType.Namespace }
     * 
     */
    public InvocationObjectType.Namespace createInvocationObjectTypeNamespace() {
        return new InvocationObjectType.Namespace();
    }

    /**
     * Create an instance of {@link ValueType }
     * 
     */
    public ValueType createValueType() {
        return new ValueType();
    }

    /**
     * Create an instance of {@link PropertyType }
     * 
     */
    public PropertyType createPropertyType() {
        return new PropertyType();
    }

    /**
     * Create an instance of {@link PropertyModificationType }
     * 
     */
    public PropertyModificationType createPropertyModificationType() {
        return new PropertyModificationType();
    }

    /**
     * Create an instance of {@link PropertyAttrsType }
     * 
     */
    public PropertyAttrsType createPropertyAttrsType() {
        return new PropertyAttrsType();
    }

    /**
     * Create an instance of {@link OperationObjectType }
     * 
     */
    public OperationObjectType createOperationObjectType() {
        return new OperationObjectType();
    }

    /**
     * Create an instance of {@link EventType }
     * 
     */
    public EventType createEventType() {
        return new EventType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "www.tibco.com/be/studio/tester", name = "oldValue")
    public JAXBElement<ValueType> createOldValue(ValueType value) {
        return new JAXBElement<ValueType>(_OldValue_QNAME, ValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "www.tibco.com/be/studio/tester", name = "Concept")
    public JAXBElement<ConceptType> createConcept(ConceptType value) {
        return new JAXBElement<ConceptType>(_Concept_QNAME, ConceptType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReteObjectType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "www.tibco.com/be/studio/tester", name = "ReteObject")
    public JAXBElement<ReteObjectType> createReteObject(ReteObjectType value) {
        return new JAXBElement<ReteObjectType>(_ReteObject_QNAME, ReteObjectType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExecutionObjectType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "www.tibco.com/be/studio/tester", name = "ExecutionObject")
    public JAXBElement<ExecutionObjectType> createExecutionObject(ExecutionObjectType value) {
        return new JAXBElement<ExecutionObjectType>(_ExecutionObject_QNAME, ExecutionObjectType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ValueType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "www.tibco.com/be/studio/tester", name = "newValue")
    public JAXBElement<ValueType> createNewValue(ValueType value) {
        return new JAXBElement<ValueType>(_NewValue_QNAME, ValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EventType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "www.tibco.com/be/studio/tester", name = "Event")
    public JAXBElement<EventType> createEvent(EventType value) {
        return new JAXBElement<EventType>(_Event_QNAME, EventType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OperationObjectType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "www.tibco.com/be/studio/tester", name = "OperationObject")
    public JAXBElement<OperationObjectType> createOperationObject(OperationObjectType value) {
        return new JAXBElement<OperationObjectType>(_OperationObject_QNAME, OperationObjectType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TesterResultsType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "www.tibco.com/be/studio/tester", name = "TesterResults")
    public JAXBElement<TesterResultsType> createTesterResults(TesterResultsType value) {
        return new JAXBElement<TesterResultsType>(_TesterResults_QNAME, TesterResultsType.class, null, value);
    }

}
