<?xml version="1.0"?>

<!--
Note: This XML document is an example Coherence Cache Configuration deployment
descriptor that should be customized (or replaced) for your particular caching 
requirements. The cache mappings and schemes declared in this descriptor are
strictly for demonstration purposes and are not required.

For detailed information on each of the elements that can be used in this
descriptor please see the Coherence Cache Configuration deployment descriptor 
guide included in the Coherence distribution or on the web at:

http://www.tangosol.com/UserGuide-Reference-CacheConfig.jsp
-->

<!DOCTYPE cache-config SYSTEM "cache-config.dtd">

<cache-config>
  <caching-scheme-mapping>
    <cache-mapping>
      <cache-name>gmd-*</cache-name>
      <scheme-name>scale-distributed</scheme-name>
    </cache-mapping>
    
    <cache-mapping>
      <cache-name>near-*</cache-name>
      <scheme-name>example-near</scheme-name>
      <init-params>
        <init-param>
          <param-name>back-size-limit</param-name>
          <param-value>10000</param-value>
        </init-param>
      </init-params>
    </cache-mapping>
    
    <cache-mapping>
      <cache-name>repl-*</cache-name>
      <scheme-name>example-replicated</scheme-name>
    </cache-mapping>
    
    <cache-mapping>
      <cache-name>opt-*</cache-name>
      <scheme-name>example-optimistic</scheme-name>
      <init-params>
        <init-param>
          <param-name>back-size-limit</param-name>
          <param-value>5000</param-value>
        </init-param>
      </init-params>
    </cache-mapping>
    
    <cache-mapping>
      <cache-name>local-*</cache-name>
      <scheme-name>example-backing-map</scheme-name>
    </cache-mapping>

    <cache-mapping>
      <cache-name>*</cache-name>
      <scheme-name>example-distributed</scheme-name>
    </cache-mapping>
  </caching-scheme-mapping>

  <caching-schemes>
    <!-- 
    Distributed caching scheme.
    -->
    <distributed-scheme>
      <scheme-name>example-distributed</scheme-name>
      <service-name>DistributedCache</service-name>

      <backing-map-scheme>
        <local-scheme>
          <scheme-ref>example-backing-map</scheme-ref>
        </local-scheme>
      </backing-map-scheme>

      <autostart>true</autostart>
    </distributed-scheme>

    <distributed-scheme>
      <scheme-name>scale-distributed</scheme-name>
      <service-name>DistributedCache</service-name>

      <backing-map-scheme>
        <class-scheme>
          <scheme-ref>unlimited-backing-map</scheme-ref>
        </class-scheme>
      </backing-map-scheme>
      <autostart>true</autostart>
    </distributed-scheme>
    
    <distributed-scheme>
	  <scheme-name>users-distributed</scheme-name>
	  <service-name>UserDistributedCache</service-name>

	  <backing-map-scheme>
	    <class-scheme>
	      <scheme-ref>unlimited-backing-map</scheme-ref>
	    </class-scheme>
	  </backing-map-scheme>
	  <autostart>true</autostart>
    </distributed-scheme>

    <!-- 
    Near caching (two-tier) scheme with size limited local cache 
    in the front-tier and a distributed cache in the back-tier.
    -->
    <near-scheme>
      <scheme-name>example-near</scheme-name>

      <front-scheme>
        <local-scheme>
          <eviction-policy>HYBRID</eviction-policy>
          <high-units>100</high-units>
          <expiry-delay>1m</expiry-delay>
        </local-scheme>
      </front-scheme>
      
      <back-scheme>
        <distributed-scheme>
          <scheme-ref>example-distributed</scheme-ref>
        </distributed-scheme>
      </back-scheme>
      
      <invalidation-strategy>present</invalidation-strategy>
      <autostart>true</autostart>
    </near-scheme>
    
    <!-- 
    Replicated caching scheme.
    -->
    <replicated-scheme>
      <scheme-name>example-replicated</scheme-name>
      <service-name>ReplicatedCache</service-name>

      <backing-map-scheme>
        <class-scheme>
          <scheme-ref>unlimited-backing-map</scheme-ref>
        </class-scheme>
      </backing-map-scheme>

      <autostart>true</autostart>
    </replicated-scheme>

    <!-- 
    Optimistic caching scheme.
    -->
    <optimistic-scheme>
      <scheme-name>example-optimistic</scheme-name>
      <service-name>OptimisticCache</service-name>

      <backing-map-scheme>
        <local-scheme>
          <scheme-ref>example-backing-map</scheme-ref>
        </local-scheme>
      </backing-map-scheme>

      <autostart>true</autostart>
    </optimistic-scheme>

    <!-- 
    Backing map scheme definition used by all the caches that require 
    size limitation and/or expiry eviction policies.
    -->
    <local-scheme>
      <scheme-name>example-backing-map</scheme-name>

      <eviction-policy>HYBRID</eviction-policy>
      <high-units>{back-size-limit 0}</high-units>
      <expiry-delay>{back-expiry 1h}</expiry-delay>
      <flush-delay>1m</flush-delay>

      <cachestore-scheme></cachestore-scheme>
    </local-scheme>

    <!-- 
    Backing map scheme definition used by all the caches that do 
    not require any eviction policies 
    -->
    <class-scheme>
      <scheme-name>unlimited-backing-map</scheme-name>
      <class-name>com.tangosol.util.SafeHashMap</class-name>
      <init-params></init-params>
    </class-scheme>

   <!-- 
    ReadWriteBackingMap caching scheme.
    -->
    <read-write-backing-map-scheme>
      <scheme-name>example-read-write</scheme-name>

      <internal-cache-scheme>
        <local-scheme>
          <scheme-ref>example-backing-map</scheme-ref>
        </local-scheme>
      </internal-cache-scheme>

      <cachestore-scheme></cachestore-scheme>

      <read-only>true</read-only>
      <write-delay>0s</write-delay>
    </read-write-backing-map-scheme>

    <!-- 
    Overflow caching scheme with example eviction local cache 
    in the front-tier and the example LH-based cache in the back-tier.
    -->
    <overflow-scheme>
      <scheme-name>example-overflow</scheme-name>

      <front-scheme>
        <local-scheme>
          <scheme-ref>example-backing-map</scheme-ref>
        </local-scheme>
      </front-scheme>

      <back-scheme>
        <external-scheme>
          <scheme-ref>example-lh</scheme-ref>
        </external-scheme>
      </back-scheme>
    </overflow-scheme>

    <!-- 
    External caching scheme using LH.
    -->
    <external-scheme>
      <scheme-name>example-lh</scheme-name>
      
      <lh-file-manager>
        <directory></directory>
      </lh-file-manager>

      <high-units>0</high-units>
    </external-scheme>

    <!-- 
    External caching scheme using memory-mapped files.
    -->
    <external-scheme>
      <scheme-name>example-nio</scheme-name>

      <nio-file-manager>
        <initial-size>8MB</initial-size>
        <maximum-size>512MB</maximum-size>
        <directory></directory>      
      </nio-file-manager>

      <high-units>0</high-units>
    </external-scheme>

    <!-- 
    Invocation Service scheme.
    -->
    <invocation-scheme>
      <scheme-name>example-invocation</scheme-name>
      <service-name>InvocationService</service-name>

      <autostart>true</autostart>
    </invocation-scheme>

  </caching-schemes>
</cache-config>
