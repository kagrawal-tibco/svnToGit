define pattern /Patterns/Pattern18 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name="test" starts with a then a::define pattern "/Patterns/Pattern18" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name="test" starts with a then a
define pattern /Patterns/Pattern0 using /Ontology/EventA as a and /Ontology/EventB as b with a.age and b.age starts with a then b::define pattern "/Patterns/Pattern0" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.age and b.age starts with a then b
define pattern /Patterns/Pattern15 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name = $test starts with a then b::define pattern "/Patterns/Pattern15" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name=$test starts with a then b
define pattern /Patterns/Pattern16 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name = $test starts with a then b::define pattern "/Patterns/Pattern16" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name=$test starts with a then b
define pattern /Patterns/Pattern17 using /Ontology/EventA as a with a.xyz starts with a::define pattern "/Patterns/Pattern17" using "/Ontology/EventA" as a with a.xyz starts with a
define pattern /Patterns/Pattern19 using /Ontology/EventA as a and /Ontology/EventB as b with a.name starts with a::define pattern "/Patterns/Pattern19" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and  starts with a
define pattern /Patterns/Pattern20 using /Ontology/EventA as a and /Ontology/EventB as b with a.name starts with any one (a, b)::define pattern "/Patterns/Pattern20" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and  starts with  any one (a, b)
define pattern /Patterns/Pattern21 using /Ontology/EventN as a with a.name starts with a::define pattern "/Patterns/Pattern21" using "/Ontology/EventN" as a with a.name starts with a
define pattern /Patterns/Pattern22 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.age starts with a then b::define pattern "/Patterns/Pattern22" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.age starts with a then b
define pattern /Patterns/Pattern23 using /Ontology/EventA as a and /Ontology/EventB as b with a.age = 1 and b.age starts with a then b::define pattern "/Patterns/Pattern23" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.age=1 and b.age starts with a then b
define pattern /Patterns/Pattern24 using /Ontology/EventA as a and /Ontology/EventB as b with a.age = "test" and b.age starts with a then b::define pattern "/Patterns/Pattern24" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.age="test" and b.age starts with a then b
define pattern /Patterns/PatternSc27 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name starts with repeat $minRepeat to $maxRepeat times (all (a, b, c))::define pattern "/Patterns/PatternSc27" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name starts with  repeat $minRepeat to $maxRepeat times  all (a, b, c)	                      
define pattern /Patterns/PatternSc28 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name starts with repeat $minRepeat to $maxRepeat times (all (a, b, c))::define pattern "/Patterns/PatternSc28" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name starts with  repeat $minRepeat to $maxRepeat times  all (a, b, c)	
define pattern /Patterns/PatternSc29 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name starts with repeat $minRepeat to $maxRepeat times (all (a, b, c))::define pattern "/Patterns/PatternSc29" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name starts with  repeat $minRepeat to $maxRepeat times  all (a, b, c)
define pattern /Patterns/PatternSc30 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name starts with a then within $time1 milliseconds b::define pattern "/Patterns/PatternSc30" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name starts with a then within $time1 MILLISECONDS b
define pattern /Patterns/PatternSc31 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name starts with a then during $time1 milliseconds b::define pattern "/Patterns/PatternSc31" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name starts with a then during $time1 MILLISECONDS b
define pattern /Patterns/PatternSc32 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name starts with a then after $time1 milliseconds then b::define pattern "/Patterns/PatternSc32" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name starts with a then after $time1 MILLISECONDS  then b
define pattern /Patterns/PatternSc33 using /Ontology/EventA as a and /Ontology/EventB as b with a.age and d.age = 10 starts with a then d::define pattern "/Patterns/PatternSc33" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.age and  starts with a then d		                     
define pattern /Patterns/PatternSc34 using /Ontology/EventA as a and /Ontology/EventB as b with a.age and b.name = 1234 starts with a then b::define pattern "/Patterns/PatternSc34" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.age and b.name=1234 starts with a then b
define pattern /Patterns/PatternSc35 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.name starts with a then during 4 seconds (b then c)::define pattern "/Patterns/PatternSc35" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.name and  starts with a then during 4000 MILLISECONDS (b then c)	   
define pattern /Patterns/PatternSc57 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name = 10 starts with a then b::define pattern "/Patterns/PatternSc57" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name=10 starts with a then b
define pattern /Patterns/PatternSc17 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name2 = "&lt;10&gt;" starts with a then b::define pattern "/Patterns/PatternSc17" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name2="&lt;10&gt;" starts with a then b
define pattern /Patterns/PatternSc18 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.name and c.name starts with repeat 0 to 1 times a then repeat 0 to 1 times b then c::define pattern "/Patterns/PatternSc18" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.name and c.name starts with  repeat 0 to 1 times a then  repeat 0 to 1 times b then c
define pattern /Patterns/PatternSc19 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.name and c.name starts with repeat 0 to 1 times a then repeat 1 to 2 times b then repeat 1 to 1 times c::define pattern "/Patterns/PatternSc19" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.name and c.name starts with  repeat 0 to 1 times a then  repeat 1 to 2 times b then  repeat 1 to 1 times c
define pattern /Patterns/PatternSc20 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.name and c.name starts with repeat 1 to 2 times any one (a, b, c)::define pattern "/Patterns/PatternSc20" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.name and c.name starts with  repeat 1 to 2 times  any one (a, b, c)
define pattern /Patterns/PatternSc21 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.name and c.name starts with repeat 1 times a then repeat 1 times b then repeat 1 times c then repeat $value times (all (a, b, c))::define pattern "/Patterns/PatternSc21" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.name and c.name starts with  repeat 1 to 1 times a then  repeat 1 to 1 times b then  repeat 1 to 1 times c then  repeat $value to $value times  all (a, b, c) 
define pattern /Patterns/PatternSc1 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.age and b.age and c.text = $nameOfC starts with a then b then c::define pattern "/Patterns/PatternSc1" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.age and b.age and c.text=$nameOfC starts with a then b then c
define pattern /Patterns/PatternSc2 using /Ontology/EventD as d and /Ontology/EventE as e and /Ontology/EventF as f with d.age and e.age and f.age starts with all (d, e, f)::define pattern "/Patterns/PatternSc2" using "/Ontology/EventD" as d and "/Ontology/EventE" as e and "/Ontology/EventF" as f with d.age and e.age and f.age starts with  all (d, e, f)
define pattern /Patterns/PatternSc0 using /Ontology/EventA as a with a.name starts with a::define pattern "/Patterns/PatternSc0" using "/Ontology/EventA" as a with a.name starts with a
define pattern /Patterns/PatternSc1 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name starts with a then b::define pattern "/Patterns/PatternSc1" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name starts with a then b
define pattern /Patterns/PatternSc2 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.name and c.text = $nameOfC starts with a then b then c::define pattern "/Patterns/PatternSc2" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.name and c.text=$nameOfC starts with a then b then c
define pattern /Patterns/PatternSc3 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.name and c.text = $nameOfC starts with a then b then c then all (c, a, b)::define pattern "/Patterns/PatternSc3" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.name and c.text=$nameOfC starts with a then b then c then  all (c, a, b)
define pattern /Patterns/PatternSc4 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.name and c.text = $nameOfC starts with a then b then c then any one (a, b, c)::define pattern "/Patterns/PatternSc4" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.name and c.text=$nameOfC starts with a then b then c then  any one (a, b, c)
define pattern /Patterns/PatternSc5 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.name and c.text = $nameOfC starts with a then b then any one (a, b, c) then all (c, b, a)::define pattern "/Patterns/PatternSc5" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.name and c.text=$nameOfC starts with a then b then  any one (a, b, c) then  all (c, b, a)
define pattern /Patterns/PatternSc6 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.name and c.text = $nameOfC starts with all (a, b, c) then any one ((any one (b, a)), c) then any one (a, b) then c::define pattern "/Patterns/PatternSc6" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.name and c.text=$nameOfC starts with  all (a, b, c) then  any one ( any one (b, a), c) then  any one (a, b) then c
define pattern /Patterns/PatternSc7 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.name and c.text = $nameOfC starts with repeat $minRepeat to $maxRepeat times (all (a, b, c))::define pattern "/Patterns/PatternSc7" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.name and c.text=$nameOfC starts with  repeat $minRepeat to $maxRepeat times  all (a, b, c)
define pattern /Patterns/PatternSc8 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.name and c.text = $nameOfC starts with a then within $time1 milliseconds b then c then within $time2 milliseconds all (c, b, a)::define pattern "/Patterns/PatternSc8" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.name and c.text=$nameOfC starts with a then within $time1 MILLISECONDS b then c then within $time2 MILLISECONDS  all (c, b, a)
define pattern /Patterns/PatternSc9 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.name and c.text = $nameOfC starts with a then after 2 seconds then b then c::define pattern "/Patterns/PatternSc9" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.name and c.text=$nameOfC starts with a then after 2000 MILLISECONDS  then b then c
define pattern /Patterns/PatternSc10 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.name and c.text = $nameOfC starts with a then during $time1 milliseconds all (c, b) then within $time2 milliseconds all (c, b, a)::define pattern "/Patterns/PatternSc10" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.name and c.text=$nameOfC starts with a then during $time1 MILLISECONDS  all (c, b) then within $time2 MILLISECONDS  all (c, b, a)
define pattern /Patterns/PatternSc11 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.name and c.text = $nameOfC starts with a then during 4 seconds (b then c)::define pattern "/Patterns/PatternSc11" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.name and c.text=$nameOfC starts with a then during 4000 MILLISECONDS (b then c)
define pattern /Patterns/PatternSc12 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.date = $datetime(2010,10,10,10,10,10,00) and  c.text = $nameOfC starts with a then b then c::define pattern "/Patterns/PatternSc12" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.date=$datetime(2010, 10, 10, 10, 10, 10, 000) and c.text=$nameOfC starts with a then b then c
define pattern /Patterns/PatternSc13 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.date = $datetime(2010,10,10,10,10,10,00) and  c.date = $date(2010,10,10) starts with a then during 4 seconds (b then c)::define pattern "/Patterns/PatternSc13" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.date=$datetime(2010, 10, 10, 10, 10, 10, 000) and c.date=$datetime(2010, 10, 10, 00, 00, 00, 000) starts with a then during 4000 MILLISECONDS (b then c)
define pattern /Patterns/PatternSc14 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.date2 = $javaUtilDate and  c.date = $date(2010,10,10) starts with a then within 4 seconds (b then c)::define pattern "/Patterns/PatternSc14" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.date2=$javaUtilDate and c.date=$datetime(2010, 10, 10, 00, 00, 00, 000) starts with a then within 4000 MILLISECONDS (b then c)
define pattern /Patterns/PatternSc15 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name starts with repeat 1 to 2 times (a then b)::define pattern "/Patterns/PatternSc15" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name starts with  repeat 1 to 2 times (a then b)
define pattern /Patterns/PatternSc16 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.date3 = $datetime(2009,09,09,09,09,10,00,"GMT-8") and  c.date3 = $date(2009,09,09,"GMT-8") starts with a then during 4 seconds (b then c)::define pattern "/Patterns/PatternSc16" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.date3=$datetime(2009, 09, 09, 10, 09, 10, 000) and c.date3=$datetime(2009, 09, 09, 01, 00, 00, 000) starts with a then during 4000 MILLISECONDS (b then c)
define pattern /Patterns/PatternSc17 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name2 = "<10>" starts with a then b::define pattern "/Patterns/PatternSc17" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name2="<10>" starts with a then b
define pattern /Patterns/PatternSc3 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name starts with repeat 6 times (a then b)::define pattern "/Patterns/PatternSc3" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name starts with  repeat 6 to 6 times (a then b)
define pattern /Patterns/PatternSc3 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name starts with repeat 1 to 2 times (a then b)::define pattern "/Patterns/PatternSc3" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name starts with  repeat 1 to 2 times (a then b)
define pattern /Patterns/PatternSc57 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name = "#######10" starts with a then b::define pattern "/Patterns/PatternSc57" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name="#######10" starts with a then b
define pattern /Patterns/PatternSc57 using /Ontology/EventA as a and /Ontology/EventB as b with a.name and b.name = "<10>" starts with a then b::define pattern "/Patterns/PatternSc57" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.name and b.name="<10>" starts with a then b
define pattern 123 using event1 as a and event2 as b with a.id and b.id="value" starts with a then b::define pattern "123" using "event1" as a and "event2" as b with a.id and b.id="value" starts with a then b
define pattern 123 using #true as a and #where as b with a.id and b.id="value" starts with a then b::define pattern "123" using "true" as a and "where" as b with a.id and b.id="value" starts with a then b
define pattern 123 using #true as #true and #where as #where with #true.id and #where.id="value" starts with #true then #where::define pattern "123" using "true" as #true and "where" as #where with #true.id and #where.id="value" starts with #true then #where
define pattern -123 using event1 as a and event2 as b with a.id and b.id="value" starts with a then b::define pattern "-123" using "event1" as a and "event2" as b with a.id and b.id="value" starts with a then b
define pattern /// using event1 as a and event2 as b with a.id and b.id="value" starts with a then b::define pattern "///" using "event1" as a and "event2" as b with a.id and b.id="value" starts with a then b
define pattern a-b-c using event1 as a and event2 as b with a.id and b.id="value" starts with a then b::define pattern "a-b-c" using "event1" as a and "event2" as b with a.id and b.id="value" starts with a then b
define pattern ABC using event1 as a and event2 as b with a.id and b.id="value" starts with a then b::define pattern "ABC" using "event1" as a and "event2" as b with a.id and b.id="value" starts with a then b
define pattern 1NAME using event1 as a and event2 as b with a.id and b.id="value" starts with a then b::define pattern "1NAME" using "event1" as a and "event2" as b with a.id and b.id="value" starts with a then b
define pattern name23 using event1 as a and event2 as b with a.id and b.id="value" starts with a then b::define pattern "name23" using "event1" as a and "event2" as b with a.id and b.id="value" starts with a then b
define pattern #where using event1 as a and event2 as b with a.id and b.id="value" starts with a then b::define pattern "where" using "event1" as a and "event2" as b with a.id and b.id="value" starts with a then b
define pattern "12-3" using event1 as a and event2 as b with a.id and b.id="value" starts with a then b::define pattern "12-3" using "event1" as a and "event2" as b with a.id and b.id="value" starts with a then b
define pattern +123 using event1 as a and event2 as b with a.id and b.id="value" starts with a then b::define pattern "+123" using "event1" as a and "event2" as b with a.id and b.id="value" starts with a then b
define pattern "12+3" using event1 as a and event2 as b with a.id and b.id="value" starts with a then b::define pattern "12+3" using "event1" as a and "event2" as b with a.id and b.id="value" starts with a then b
define pattern "jjj*jjj" using event1 as a and event2 as b with a.id and b.id="value" starts with a then b::define pattern "jjj*jjj" using "event1" as a and "event2" as b with a.id and b.id="value" starts with a then b
define pattern ",esdfdf" using event1 as a and event2 as b with a.id and b.id="value" starts with a then b::define pattern ",esdfdf" using "event1" as a and "event2" as b with a.id and b.id="value" starts with a then b
define pattern "<>?/~!#$%^&*()_+{}|:'?><esdfdf" using event1 as a and event2 as b with a.id and b.id="value" starts with a then b::define pattern "<>?/~!#$%^&*()_+{}|:'?><esdfdf" using "event1" as a and "event2" as b with a.id and b.id="value" starts with a then b
define pattern 1name using event1 as a and event2 as b with a.id and b.id="value" starts with a then b::define pattern "1name" using "event1" as a and "event2" as b with a.id and b.id="value" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="$$$1'dummy'" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="$$$1'dummy'" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="$$$1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="$$$1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="###1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="###1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="<<<1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="<<<1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id=",,,1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id=",,,1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="%%%1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="%%%1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="***1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="***1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="~~~1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="~~~1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="!!!1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="!!!1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="@@@1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="@@@1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="^^^1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="^^^1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="&&&1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="&&&1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="(((1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="(((1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id=")))1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id=")))1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="___1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="___1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="+++1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="+++1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="[[[1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="[[[1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="]]]1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="]]]1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="{{{1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="{{{1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="}}}1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="}}}1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="\\\1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="\\\1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="|||1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="|||1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id=";;;1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id=";;;1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="///1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="///1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="???1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="???1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="...>,<1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="...>,<1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="[]{}\|;/?.>,<1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="[]{}\|;/?.>,<1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="$#<,%*~!@#$%^&*()_+[]{}\|;:/?.>,<1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="$#<,%*~!@#$%^&*()_+[]{}\|;:/?.>,<1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="<><><><><><>1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="<><><><><><>1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="++++++++1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="++++++++1" starts with a then b
define pattern /Patterns/PatternSc13 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.date = $datetime(2010,10,10,10,10,10,00,"GMT-8") and  c.date = $date(2010,10,10,"GMT-8") starts with a then during 10 seconds (b then c)::define pattern "/Patterns/PatternSc13" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.date=$datetime(2010, 10, 10, 11, 10, 10, 000) and c.date=$datetime(2010, 10, 10, 01, 00, 00, 000) starts with a then during 10000 MILLISECONDS (b then c)
define pattern /Patterns/PatternSc13 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.date = $datetime(2010,10,10,10,10,10,00,null) and  c.date = $date(2010,10,10,null) starts with a then during 10 seconds (b then c)::define pattern "/Patterns/PatternSc13" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.date=$datetime(2010, 10, 10, 10, 10, 10, 000) and c.date=$datetime(2010, 10, 10, 00, 00, 00, 000) starts with a then during 10000 MILLISECONDS (b then c)
define pattern /Patterns/PatternSc13 using /Ontology/EventA as a and /Ontology/EventB as b and /Ontology/EventC as c with a.name and b.date = $datetime(2010,10,10,10,10,10,00) and  c.date = $date(2010,10,10) starts with a then during 10 seconds (b then c)::define pattern "/Patterns/PatternSc13" using "/Ontology/EventA" as a and "/Ontology/EventB" as b and "/Ontology/EventC" as c with a.name and b.date=$datetime(2010, 10, 10, 10, 10, 10, 000) and c.date=$datetime(2010, 10, 10, 00, 00, 00, 000) starts with a then during 10000 MILLISECONDS (b then c)
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and /Ontology/EventB as b with a.id and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.id and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a and event2 as c with a.name and c.text=123 starts with a then repeat $minRepeat to $maxRepeat times a then within 10 milliseconds c::define pattern "/test/testpattern" using "event1" as a and "event2" as c with a.name and c.text=123 starts with a then  repeat $minRepeat to $maxRepeat times a then within 10 MILLISECONDS c
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id = $param1  and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id=$param1 and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern #event using event1 as a with a.id starts with a::define pattern "event" using "event1" as a with a.id starts with a
define pattern OrderFullfilment using Order as order and Fulfillment as fulfillment and Cancellation as cancellation with order.customerId and fulfillment.customerId and cancellation.customerId starts with order  then within 10 minutes fulfillment then after 5 minutes::define pattern "OrderFullfilment" using "Order" as order and "Fulfillment" as fulfillment and "Cancellation" as cancellation with order.customerId and fulfillment.customerId and cancellation.customerId starts with order then within 600000 MILLISECONDS fulfillment then after 300000 MILLISECONDS
define pattern /test/testpattern using event1 as a and event2 as c with a.name and c.text=-123 starts with a then repeat $minRepeat to $maxRepeat times a then within 10 milliseconds c::define pattern "/test/testpattern" using "event1" as a and "event2" as c with a.name and c.text=-123 starts with a then  repeat $minRepeat to $maxRepeat times a then within 10 MILLISECONDS c
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id=-10.0 starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id=-10.0d starts with a then b
define pattern /test/testpattern using event1 as a with a.id starts with all (a, b, c) then any one ((any one (b, a)), c) then any one (a, b) then c::define pattern "/test/testpattern" using "event1" as a with a.id starts with  all (a, b, c) then  any one ( any one (b, a), c) then  any one (a, b) then c
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id=false starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id=false starts with a then b
define pattern #pattern using event1 as a with a.id starts with a::define pattern "pattern" using "event1" as a with a.id starts with a
define pattern /test/testpattern using event1 as a with a.id starts with a then any one (a, (a then any one (a, (a then any one (a, (a then any one (a, (a then a then a))))))))::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then  any one (a, (a then  any one (a, (a then  any one (a, (a then  any one (a, (a then a then a))))))))
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id = $javaUtilDate and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 days b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id=$javaUtilDate and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 864000000 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a and event2 as b with a.id="<123>" and b.id starts with a then x then any one (a, b) then within 100 seconds b then during 100 seconds a then repeat 10 to 10000 times b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id="<123>" and b.id starts with a then x then  any one (a, b) then within 100000 MILLISECONDS b then during 100000 MILLISECONDS a then  repeat 10 to 10000 times b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id starts with any one (a, b) then any one ((a then any one ((a then any one (a, b)), (b then all (a, b)))), b)::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id starts with  any one (a, b) then  any one ((a then  any one ((a then  any one (a, b)), (b then  all (a, b)))), b)
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id = $date(2009, 12, 25) and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id=$datetime(2009, 12, 25, 00, 00, 00, 000) and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a with a.id starts with a then a then during 10 seconds a::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then a then during 10000 MILLISECONDS a
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id=$date(10,10,10) starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id=$datetime(0010, 10, 10, 00, 00, 00, 000) starts with a then b
define pattern #times using event1 as a with a.id starts with a::define pattern "times" using "event1" as a with a.id starts with a
define pattern /test/testpattern using event1 as a with a.id starts with all (a, b, c) then any one ((any one (b, a)), c) then any one (a, (b then after 10 minutes)) then c::define pattern "/test/testpattern" using "event1" as a with a.id starts with  all (a, b, c) then  any one ( any one (b, a), c) then  any one (a, (b then after 600000 MILLISECONDS )) then c
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id = $javaUtilDate and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id=$javaUtilDate and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern "#pattern" using event1 as a with a.id starts with a::define pattern "#pattern" using "event1" as a with a.id starts with a
define pattern /test/testpattern using event1 as a and event2 as b and event3 as c with a.name and b.name and c.text = $nameOfC starts with all (a, b, c) then any one ((any one (b, a)), c) then any one (a, b) then c::define pattern "/test/testpattern" using "event1" as a and "event2" as b and "event3" as c with a.name and b.name and c.text=$nameOfC starts with  all (a, b, c) then  any one ( any one (b, a), c) then  any one (a, b) then c
define pattern /test/testpattern using event1 as a with a.id starts with all (a, b, c) then any one ((any one (b, a)), c) then any one (a, (b then during 10 seconds c)) then c::define pattern "/test/testpattern" using "event1" as a with a.id starts with  all (a, b, c) then  any one ( any one (b, a), c) then  any one (a, (b then during 10000 MILLISECONDS c)) then c
define pattern t using e1 as a with a.id starts with any one (a, b) then within 10 seconds a::define pattern "t" using "e1" as a with a.id starts with  any one (a, b) then within 10000 MILLISECONDS a
define pattern /test/testpattern using event1 as a with a.id starts with a then any one (a, (a then a then a then a then a then a))::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then  any one (a, (a then a then a then a then a then a))
define pattern /test/testpattern using event1 as a and event2 as b and event3 as c and event4 as d and event5 as e and event6 as f with a.id="123" and b.id and c.id and d.id and e.id and f.id starts with any one (a, b, c) then b then any one (a, b, c, e) then within 100 seconds secondevent then during 100 seconds c then repeat 10 to 1000 times c::define pattern "/test/testpattern" using "event1" as a and "event2" as b and "event3" as c and "event4" as d and "event5" as e and "event6" as f with a.id="123" and b.id and c.id and d.id and e.id and f.id starts with  any one (a, b, c) then b then  any one (a, b, c, e) then within 100000 MILLISECONDS secondevent then during 100000 MILLISECONDS c then  repeat 10 to 1000 times c
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id=$datetime(10,10,10,10,10,10,10) starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id=$datetime(0010, 10, 10, 10, 10, 10, 010) starts with a then b
define pattern /test/testpattern using event1 as a with a.id starts with all (a, b, c) then any one ((any one (b, a)), c) then any one (a, (b then after 10 hours)) then c::define pattern "/test/testpattern" using "event1" as a with a.id starts with  all (a, b, c) then  any one ( any one (b, a), c) then  any one (a, (b then after 36000000 MILLISECONDS )) then c
define pattern t using e1 as a with a.id starts with any one (a, b) then within 10 milliseconds a::define pattern "t" using "e1" as a with a.id starts with  any one (a, b) then within 10 MILLISECONDS a
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id=true starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id=true starts with a then b
define pattern /test/testpattern using event1 as a with a.id starts with a then all (a, (a then all (a, (a then a then a then a then a))))::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then  all (a, (a then  all (a, (a then a then a then a then a))))
define pattern /test/testpattern using event1 as a and event2 as b with a.id=$datetime(10,10,10,10,10,10,10) and b.id starts with a then x then any one (a, b) then within $x1 seconds b then during 100 seconds a then repeat 2 to 3 times b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id=$datetime(0010, 10, 10, 10, 10, 10, 010) and b.id starts with a then x then  any one (a, b) then within $x1 SECONDS b then during 100000 MILLISECONDS a then  repeat 2 to 3 times b
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id = 333333L and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id=333333l and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern #to using #to as #to with #to.id_text starts with #to::define pattern "to" using "to" as #to with #to.id_text starts with #to
define pattern /test/testpattern using event1 as a with a.id starts with a then a then a then a then a then a then a::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then a then a then a then a then a then a
define pattern /test/testpattern using event1 as a with a.id starts with a then repeat 1 to 100 times (a)::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then  repeat 1 to 100 times a
define pattern /test/testpattern using event1 as a with a.id starts with a then any one (a, (a then any one (a, (a then any one (a, (a then any one (a, (a then any one (a, (a then a))))))))))::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then  any one (a, (a then  any one (a, (a then  any one (a, (a then  any one (a, (a then  any one (a, (a then a))))))))))
define pattern /test/testpattern using event1 as a with a.id starts with all (a, b, c) then any one ((any one (b, a)), c) then any one (a, (b then after $xyz days)) then c::define pattern "/test/testpattern" using "event1" as a with a.id starts with  all (a, b, c) then  any one ( any one (b, a), c) then  any one (a, (b then after $xyz DAYS )) then c
define pattern /test/testpattern using event1 as a with a.id starts with a then any one (a, (a then any one (a, (a then any one (a, (a then any one (a, (a then any one (a, (a then repeat 1 to 100 times a))))))))))::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then  any one (a, (a then  any one (a, (a then  any one (a, (a then  any one (a, (a then  any one (a, (a then  repeat 1 to 100 times a))))))))))
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and /Ontology/EventB as b with a.id and b.id starts with a then b then any one (a, b) then all (a, b) then all ( (a then b), c ) then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.id and b.id starts with a then b then  any one (a, b) then  all (a, b) then  all ((a then b), c) then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a with a.id starts with all (a, b, c) then any one ((any one (b, a)), c) then any one (a, (b then after 10000000 seconds)) then c::define pattern "/test/testpattern" using "event1" as a with a.id starts with  all (a, b, c) then  any one ( any one (b, a), c) then  any one (a, (b then after 10000000000 MILLISECONDS )) then c
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id = $javaUtilDate and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 minutes b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id=$javaUtilDate and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 600000 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="1" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="1" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as c with a.name and c.text=-123.0d starts with a then repeat $minRepeat to $maxRepeat times a then within 10 milliseconds c::define pattern "/test/testpattern" using "event1" as a and "event2" as c with a.name and c.text=-123.0d starts with a then  repeat $minRepeat to $maxRepeat times a then within 10 MILLISECONDS c
define pattern "pattern" using event1 as a with a.id starts with a::define pattern "pattern" using "event1" as a with a.id starts with a
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id = $javaUtilDate and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 seconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id=$javaUtilDate and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10000 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a with a.id starts with a then any one (a, (a then any one (a, (a then a then a then a then a))))::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then  any one (a, (a then  any one (a, (a then a then a then a then a))))
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id starts with any one (a, b) then any one (a, b) then any one ((a then a), b)::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id starts with  any one (a, b) then  any one (a, b) then  any one ((a then a), b)
define pattern test-pattern using event1 as a with a.id starts with a::define pattern "test-pattern" using "event1" as a with a.id starts with a
define pattern /test/testpattern using event1 as a with a.id starts with a then after 10 seconds::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then after 10000 MILLISECONDS
define pattern /test/testpattern using event1 as a with a.id starts with all (a, b, c) then any one ((any one (b, a)), c) then any one (a, (b then after $xyz seconds)) then c::define pattern "/test/testpattern" using "event1" as a with a.id starts with  all (a, b, c) then  any one ( any one (b, a), c) then  any one (a, (b then after $xyz SECONDS )) then c
define pattern /test/testpattern using event1 as a and event2 as c with a.name and c.text=123.0 starts with a then repeat $minRepeat to $maxRepeat times a then within 10 milliseconds c::define pattern "/test/testpattern" using "event1" as a and "event2" as c with a.name and c.text=123.0d starts with a then  repeat $minRepeat to $maxRepeat times a then within 10 MILLISECONDS c
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id = False and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id=false and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a and event2 as b and event3 as c with a.id="123" and b.id and c.id starts with any one (a, b, c) then b then any one (a, b, c) then within 100 seconds secondevent then during 100 seconds c then repeat 10 to 1000 times c::define pattern "/test/testpattern" using "event1" as a and "event2" as b and "event3" as c with a.id="123" and b.id and c.id starts with  any one (a, b, c) then b then  any one (a, b, c) then within 100000 MILLISECONDS secondevent then during 100000 MILLISECONDS c then  repeat 10 to 1000 times c
define pattern /test/testpattern using event1 as a with a.id starts with all (a, b, c) then any one ((any one (b, a)), c) then any one ((a then b), b) then c::define pattern "/test/testpattern" using "event1" as a with a.id starts with  all (a, b, c) then  any one ( any one (b, a), c) then  any one ((a then b), b) then c
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id="10" starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id="10" starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id=10 starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id=10 starts with a then b
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id = 10.0 and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id=10.0d and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id starts with any one (a, b) then any one ((a then a), (b))::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id starts with  any one (a, b) then  any one ((a then a), b)
define pattern /test/testpattern using event1 as a with a.id starts with a then during 10 seconds a::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then during 10000 MILLISECONDS a
define pattern /test/testpattern using event1 as a and event2 as b with a.name and b.name starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.name and b.name starts with a then b
define pattern #to using #to as #to with #to.id1 starts with #to::define pattern "to" using "to" as #to with #to.id1 starts with #to
define pattern /test/testpattern using event1 as a and event2 as c with a.name and c.text=1234567890123L starts with a then repeat $minRepeat to $maxRepeat times a then within 10 milliseconds c::define pattern "/test/testpattern" using "event1" as a and "event2" as c with a.name and c.text=1234567890123l starts with a then  repeat $minRepeat to $maxRepeat times a then within 10 MILLISECONDS c
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id="abc" and b.id starts with a then x then any one (a, b) then within $x1 seconds b then during 100 seconds a then repeat 2 to 3 times b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id="abc" and b.id starts with a then x then  any one (a, b) then within $x1 SECONDS b then during 100000 MILLISECONDS a then  repeat 2 to 3 times b
define pattern /test/testpattern using event1 as a with a.id starts with a then a then within 10 seconds a::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then a then within 10000 MILLISECONDS a
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id starts with all (a, b) then a::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id starts with  all (a, b) then a
define pattern /test/testpattern using event1 as a and event2 as c with a.name and c.text = $nameOfC starts with b then repeat $minRepeat to $maxRepeat times a then within $withinMillis milliseconds c::define pattern "/test/testpattern" using "event1" as a and "event2" as c with a.name and c.text=$nameOfC starts with b then  repeat $minRepeat to $maxRepeat times a then within $withinMillis MILLISECONDS c
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id = $javaUtilDate and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 hours b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id=$javaUtilDate and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 36000000 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id starts with any one (a, b) then any one (a, (b then all (a,b)))::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id starts with  any one (a, b) then  any one (a, (b then  all (a, b)))
define pattern /test/testpattern using event1 as a with a.id starts with a then all (a, (a then a then a then a then a then a))::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then  all (a, (a then a then a then a then a then a))
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id = false and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id=false and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a with a.id starts with a::define pattern "/test/testpattern" using "event1" as a with a.id starts with a
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id starts with a::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id starts with a
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id = 0.1d and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id=0.1d and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a and event2 as c with a.name and c.text = $nameOfC starts with repeat $minRepeat to $maxRepeat times a then within $withinMillis milliseconds c::define pattern "/test/testpattern" using "event1" as a and "event2" as c with a.name and c.text=$nameOfC starts with  repeat $minRepeat to $maxRepeat times a then within $withinMillis MILLISECONDS c
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id starts with any one (a, b) then any one (a, (b then b))::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id starts with  any one (a, b) then  any one (a, (b then b))
define pattern #pattern using event1 as a with a.id starts with all (a, a, a, a, a, a, a)::define pattern "pattern" using "event1" as a with a.id starts with  all (a, a, a, a, a, a, a)
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id starts with any one (a, b) then any one (a,b)::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id starts with  any one (a, b) then  any one (a, b)
define pattern /test/testpattern using event1 as a with a.name starts with a then repeat $1to to $2to times a::define pattern "/test/testpattern" using "event1" as a with a.name starts with a then  repeat $1to to $2to times a
define pattern /Patterns/Pattern0 using /Ontology/EventA as a and /Ontology/EventB as b with a.age=1 and b.age starts with a then b::define pattern "/Patterns/Pattern0" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.age=1 and b.age starts with a then b
define pattern /test/testpattern using event1 as a with a.id starts with a then a::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then a
define pattern /test/testpattern using event1 as a and event2 as c with a.name and c.text=-123.0 starts with a then repeat $minRepeat to $maxRepeat times a then within 10 milliseconds c::define pattern "/test/testpattern" using "event1" as a and "event2" as c with a.name and c.text=-123.0d starts with a then  repeat $minRepeat to $maxRepeat times a then within 10 MILLISECONDS c
define pattern /Patterns/PatternA using /Ontology/EventA as a and /Ontology/EventB as b with a.id and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/Patterns/PatternA" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.id and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id starts with any one (a, b) then a::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id starts with  any one (a, b) then a
define pattern /test/testpattern using event1 as a with a.id starts with a then within 10 seconds a::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then within 10000 MILLISECONDS a
define pattern /test/testpattern using event1 as a with a.id starts with all (a, b, c) then any one ((any one (b, a)), any one (b, c)) then any one (a, b) then c::define pattern "/test/testpattern" using "event1" as a with a.id starts with  all (a, b, c) then  any one ( any one (b, a),  any one (b, c)) then  any one (a, b) then c
define pattern /test/testpattern using event1 as a with a.id starts with all (a, b, c) then any one ((any one (b, a)), c) then any one (a, (b then after $xyz minutes)) then c::define pattern "/test/testpattern" using "event1" as a with a.id starts with  all (a, b, c) then  any one ( any one (b, a), c) then  any one (a, (b then after $xyz MINUTES )) then c
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b  with a.id = $dateTime(2009, 12, 25, 9, 48, 37, 0) and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id=$datetime(2009, 12, 25, 09, 48, 37, 000) and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a with a.name starts with a then repeat $minRepeat to $maxRepeat times a::define pattern "/test/testpattern" using "event1" as a with a.name starts with a then  repeat $minRepeat to $maxRepeat times a
define pattern #pattern using event1 as a with a.id starts with any one (a, a, a, a, a, a, a)::define pattern "pattern" using "event1" as a with a.id starts with  any one (a, a, a, a, a, a, a)
define pattern #to using #to as #to with #to.id1 starts with #to::define pattern "to" using "to" as #to with #to.id1 starts with #to
define pattern /test/testpattern using event1 as a with a.id starts with a then a then after 10 seconds::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then a then after 10000 MILLISECONDS
define pattern /test/testpattern using event1 as a and event2 as b and event3 as c with a.name and b.name and c.text = $nameOfC starts with a then after 2 seconds then c::define pattern "/test/testpattern" using "event1" as a and "event2" as b and "event3" as c with a.name and b.name and c.text=$nameOfC starts with a then after 2000 MILLISECONDS  then c
define pattern /test/testpattern using event1 as a and event2 as b and event3 as c with a.name and b.name and c.text = $nameOfC starts with a then after 500 milliseconds then c::define pattern "/test/testpattern" using "event1" as a and "event2" as b and "event3" as c with a.name and b.name and c.text=$nameOfC starts with a then after 500 MILLISECONDS  then c
define pattern /test/testpattern using event1 as a and event2 as b with a.name and b.name starts with a then b then during 100 hours b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.name and b.name starts with a then b then during 360000000 MILLISECONDS b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id starts with any one (a, b) then any one ((a then all (a,b)), b)::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id starts with  any one (a, b) then  any one ((a then  all (a, b)), b)
define pattern /test/testpattern using event1 as a with a.id starts with all (a, b, c) then any one ((any one (b, a)), c) then any one (a, (b then after $xyz hours)) then c::define pattern "/test/testpattern" using "event1" as a with a.id starts with  all (a, b, c) then  any one ( any one (b, a), c) then  any one (a, (b then after $xyz HOURS )) then c
define pattern /test/testpattern using event1 as a and event2 as b with a.id=$date(10,10,10) and b.id starts with a then x then any one (a, b) then within $x1 seconds b then during 100 seconds a then repeat 2 to 3 times b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id=$datetime(0010, 10, 10, 00, 00, 00, 000) and b.id starts with a then x then  any one (a, b) then within $x1 SECONDS b then during 100000 MILLISECONDS a then  repeat 2 to 3 times b
define pattern /test/testpattern using event1 as a and event2 as b with a.id="123" and b.id starts with a then x then any one (a, b) then within 100 seconds b then during 100 seconds a then repeat 10 to 1000 times b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id="123" and b.id starts with a then x then  any one (a, b) then within 100000 MILLISECONDS b then during 100000 MILLISECONDS a then  repeat 10 to 1000 times b
define pattern /test/testpattern using event1 as a and event2 as c with a.name and c.text=-1234567890123L starts with a then repeat $minRepeat to $maxRepeat times a then within 10 milliseconds c::define pattern "/test/testpattern" using "event1" as a and "event2" as c with a.name and c.text=-1234567890123l starts with a then  repeat $minRepeat to $maxRepeat times a then within 10 MILLISECONDS c
define pattern /test/testpattern using event1 as a with a.id starts with all (a, b, c) then any one ((any one (b, a)), c) then any one (a, (b then after $xyz milliseconds)) then c::define pattern "/test/testpattern" using "event1" as a with a.id starts with  all (a, b, c) then  any one ( any one (b, a), c) then  any one (a, (b then after $xyz MILLISECONDS )) then c
define pattern /test/testpattern using event1 as a with a.id starts with a then any one (a, (a then any one (a, (a then any one (a, (a then a then a then a))))))::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then  any one (a, (a then  any one (a, (a then  any one (a, (a then a then a then a))))))
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id = 10 and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id=10 and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id starts with any one (a, b) then all (a,b)::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id starts with  any one (a, b) then  all (a, b)
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id=$id starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id=$id starts with a then b
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id = 333333l and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id=333333l and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a with a.id starts with all (a, b, c) then any one ((any one (b, a)), c) then any one (a, (b then within 20 seconds c)) then c::define pattern "/test/testpattern" using "event1" as a with a.id starts with  all (a, b, c) then  any one ( any one (b, a), c) then  any one (a, (b then within 20000 MILLISECONDS c)) then c
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id starts with any one (a, b) then any one (a, (b then any one (a, b)))::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id starts with  any one (a, b) then  any one (a, (b then  any one (a, b)))
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id=10.01 starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id=10.01d starts with a then b
define pattern /test/testpattern using event1 as a with a.id starts with a then all (a, (a then all (a, (a then all (a, (a then all (a, (a then all (a, (a then a))))))))))::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then  all (a, (a then  all (a, (a then  all (a, (a then  all (a, (a then  all (a, (a then a))))))))))
define pattern /ShipmentAggregator using /Shipment as shipment with shipment.destinationState starts with shipment then within 2 hours repeat 0 to 49 times shipment::define pattern "/ShipmentAggregator" using "/Shipment" as shipment with shipment.destinationState starts with shipment then within 7200000 MILLISECONDS  repeat 0 to 49 times shipment
define pattern /Patterns/Pattern23 using /Ontology/EventA as a and /Ontology/EventB as b with a.date=$date(10,10,10) and b.date starts with a then b::define pattern "/Patterns/Pattern23" using "/Ontology/EventA" as a and "/Ontology/EventB" as b with a.date=$datetime(0010, 10, 10, 00, 00, 00, 000) and b.date starts with a then b
define pattern /test/testpattern using event1 as a with a.id starts with a then all (a, (a then all (a, (a then all (a, (a then all (a, (a then a then a))))))))::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then  all (a, (a then  all (a, (a then  all (a, (a then  all (a, (a then a then a))))))))
define pattern /test/testpattern using event1 as a with a.id starts with a then all (a, (a then all (a, (a then all (a, (a then a then a then a))))))::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then  all (a, (a then  all (a, (a then  all (a, (a then a then a then a))))))
define pattern /test/testpattern using event1 as a and event2 as c with a.name and c.text=123.0d starts with a then repeat $minRepeat to $maxRepeat times a then within 10 milliseconds c::define pattern "/test/testpattern" using "event1" as a and "event2" as c with a.name and c.text=123.0d starts with a then  repeat $minRepeat to $maxRepeat times a then within 10 MILLISECONDS c
define pattern /test/testpattern using event1 as b with b.name starts with b then repeat 10 to 100 times b::define pattern "/test/testpattern" using "event1" as b with b.name starts with b then  repeat 10 to 100 times b
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id starts with any one (a, b) then any one ((a then any one (a, b)), b)::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id starts with  any one (a, b) then  any one ((a then  any one (a, b)), b)
define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using /Ontology/EventA as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id = "some\ string" and b.id starts with a then b then any one (a, b) then all (a, b) then a then b then within 10 milliseconds b then repeat 10 to 20 times a then repeat $intParam2 to $intParam3 times b then after $longParam minutes then all ( (a then b), b )::define pattern "/My\ Ontology/My\ Patterns/\ PatternA" using "/Ontology/EventA" as a and "/My\ Ontology/My\ Patterns/EventB" as b with a.id="some\ string" and b.id starts with a then b then  any one (a, b) then  all (a, b) then a then b then within 10 MILLISECONDS b then  repeat 10 to 20 times a then  repeat $intParam2 to $intParam3 times b then after $longParam MINUTES  then  all ((a then b), b)
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id=-10.0d starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id=-10.0d starts with a then b
define pattern /test/testpattern using event1 as a and event2 as b with a.id=123 and b.id starts with a then x then any one (a, b) then within $x1 seconds b then during 100 seconds a then repeat 2 to 3 times b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id=123 and b.id starts with a then x then  any one (a, b) then within $x1 SECONDS b then during 100000 MILLISECONDS a then  repeat 2 to 3 times b
define pattern /test/testpattern using event1 as a with a.id starts with all (a, b, c) then any one ((any one (b, a)), c) then any one (a, (b then c)) then c::define pattern "/test/testpattern" using "event1" as a with a.id starts with  all (a, b, c) then  any one ( any one (b, a), c) then  any one (a, (b then c)) then c
define pattern #and using event1 as a with a.id starts with a::define pattern "and" using "event1" as a with a.id starts with a
define pattern /test/testpattern using event1 as a and event2 as b with a.id and b.id=-10 starts with a then b::define pattern "/test/testpattern" using "event1" as a and "event2" as b with a.id and b.id=-10 starts with a then b
define pattern /test/testpattern using event1 as a with a.id starts with a then after 2 seconds then b::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then after 2000 MILLISECONDS  then b
define pattern /test/testpattern using event1 as a with a.id starts with a then a then repeat 1 to 100 times a::define pattern "/test/testpattern" using "event1" as a with a.id starts with a then a then  repeat 1 to 100 times a
