/**
 * @description Add new policy instance to the policy store.
 */
void rulefunction Authentication.MDS.Services.PolicyStore.Preprocessors.BAAS_RFP_AddNewAuthnPolicy {
	attribute {
		validity = ACTION;
	}
	scope {
		Authentication.MDS.Services.PolicyStore.Events.BAAS_E_AddNewPolicyRequestEvent baas_e_addnewpolicyrequestevent;
	}
	body {
		String newPolicyId = baas_e_addnewpolicyrequestevent.policyId;
		System.debugOut("New Policy id " + newPolicyId);
		System.debugOut("Policy content " + baas_e_addnewpolicyrequestevent@payload);
		//Check if such a policy id exists in the store.
		boolean policyLock = Cluster.DataGrid.Lock(newPolicyId, -1, false);
		if (policyLock) {
			BAAS_C_AuthnPolicy existingAuthnPolicy = Cluster.DataGrid.CacheLoadConceptByExtId(newPolicyId, true);
			if (existingAuthnPolicy != null) {
				throw Exception.newException("Policy creation error", "Attempt to create policy with an existing policy id", null);
				//TODO send response
			}
		}
		//Lock and load policy store
		boolean policyStoreLock = Cluster.DataGrid.Lock("POLICY_STORE", -1, false);
		if (policyStoreLock) {
			BAAS_C_PolicyStore mdsPolicyStore = Cluster.DataGrid.CacheLoadConceptByExtId("POLICY_STORE", true);
			if (mdsPolicyStore == null) {
				throw Exception.newException("Policy store config error", "No policy store created in metadata repository", null);
				//Send response.
			}
			BAAS_C_AuthnPolicy newPolicy = 
				Authentication.MDS.Policy.Concepts.BAAS_C_AuthnPolicy.BAAS_C_AuthnPolicy(newPolicyId, newPolicyId, baas_e_addnewpolicyrequestevent@payload);
		
			Instance.PropertyArray.appendContainedConcept(mdsPolicyStore.policies, newPolicy, 1L);
			//Send success response
			BAAS_E_AddNewPolicyResponseEvent policyAdditionResponseEvent = 
				Event.createEvent("xslt://{{/Authentication/MDS/Services/PolicyStore/Events/BAAS_E_AddNewPolicyResponseEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\" exclude-result-prefixes=\"xsl xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <status>\n                    <xsl:value-of select=\"&quot;true&quot;\"/>\n                </status>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
			Event.replyEvent(baas_e_addnewpolicyrequestevent, policyAdditionResponseEvent);
		}
	}
}