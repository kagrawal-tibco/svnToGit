/**
 * @description Preprocessor RF for task lists fetch operation.
 */
void rulefunction Approval.Rules.RuleFunctions.Preprocessors.AMS_RFP_FetchTasksListPP {
	attribute {
		validity = ACTION;
	}
	scope {
		Approval.Events.ArtifactEvents.Worklist.AMS_E_TaskListRequestEvent ams_e_tasklistrequestevent;
	}
	body {
		boolean isUserLoggedIn = 
			Approval.CommonServices.AMS_RF_ValidateUsername(ams_e_tasklistrequestevent) != null;
		
		if (!isUserLoggedIn) {
			AMS_E_ErrorEvent errorEvent = 
				Approval.CommonServices.AMS_RF_CreateErrorEvent("COMMIT_ERROR", "The user " + ams_e_tasklistrequestevent.loggedInUserName + " is not logged in", null);
			Event.replyEvent(ams_e_tasklistrequestevent, errorEvent);
			//Consume the event so that RTC is not triggered
			Event.consumeEvent(ams_e_tasklistrequestevent);
			throw Exception.newException("CHECKIN_ERROR", 
										 "The user " + ams_e_tasklistrequestevent.loggedInUserName + " is not logged in", null);	
		}
		//Lock and load CFG concept.
//		boolean configuredRolesLock = Cluster.DataGrid.Lock("CFG-ROLES", -1, false);
//		if (configuredRolesLock) {
//			//Include contained concepts also
//			AMS_C_ConfiguredRoles configuredRoles = Cluster.DataGrid.CacheLoadConceptByExtId("CFG-ROLES", true);
//		}
	}
}