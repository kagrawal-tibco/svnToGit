/**
 * @description 
 */
boolean rulefunction WebStudio.Core.RuleFunctions.Utils.WS_RF_ValidateSCSCredentials {
	attribute {
		validity = ACTION;
	}
	scope {
		String scsUserName;
		String scsPassword;
		String subscriptionId;
	}
	body {
		Object LOGGER = Log.getLogger("WebStudio.Core.RuleFunctions.Utils.WS_RF_ValidateSCSCredentials");
		
		boolean isValid = false;
		try {
			String scsIntegrationType = System.getSystemPropertyAsString("ws.scs.impl.type", null);	
			if (!String.equals(scsIntegrationType, "file")) {
				Log.log(LOGGER, "Debug", "Validate SCS credentials when SCS type - %s", scsIntegrationType);

				String scsRootURL = WS_RF_GetSCSRootURL(null, subscriptionId);
				//Validate only if username and/or password is non-null value
				if (scsUserName != null || scsPassword != null) {
					String output = WS.SCS.listManagedProjects(scsIntegrationType, scsRootURL, scsUserName, scsPassword);
					if (output == null || String.equals(output, "")) {
						Log.log(LOGGER, "Warn", "Validation failed with given SCS credentials.");
					} else {
						isValid = true;
					}
				} else {
					isValid = true;
				}		
			} else {
				// case being File system
				isValid = true;
			}
		} catch (Exception e) {
			Log.logException(LOGGER, "Error", "Exception validating SCS credentials - %s", e, e@message);
		}
		
		return isValid;
	}
}