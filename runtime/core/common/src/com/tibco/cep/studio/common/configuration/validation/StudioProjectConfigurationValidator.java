/**
 *
 * $Id$
 */
package com.tibco.cep.studio.common.configuration.validation;

import com.tibco.cep.studio.common.configuration.BpmnProcessSettings;
import com.tibco.cep.studio.common.configuration.CoreJavaLibEntry;
import com.tibco.cep.studio.common.configuration.CustomFunctionLibEntry;
import com.tibco.cep.studio.common.configuration.EnterpriseArchiveEntry;
import com.tibco.cep.studio.common.configuration.JavaClasspathEntry;
import com.tibco.cep.studio.common.configuration.JavaSourceFolderEntry;
import com.tibco.cep.studio.common.configuration.ProjectLibraryEntry;
import com.tibco.cep.studio.common.configuration.ThirdPartyLibEntry;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link com.tibco.cep.studio.common.configuration.StudioProjectConfiguration}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface StudioProjectConfigurationValidator {
	boolean validate();

	boolean validateThirdpartyLibEntries(EList<ThirdPartyLibEntry> value);
	boolean validateCoreInternalLibEntries(EList<CoreJavaLibEntry> value);
	boolean validateCustomFunctionLibEntries(EList<CustomFunctionLibEntry> value);
	boolean validateProjectLibEntries(EList<ProjectLibraryEntry> value);
	boolean validateJavaClasspathEntries(EList<JavaClasspathEntry> value);
	boolean validateJavaSourceFolderEntries(EList<JavaSourceFolderEntry> value);
	boolean validateEnterpriseArchiveConfiguration(EnterpriseArchiveEntry value);
	boolean validateBpmnProcessSettings(BpmnProcessSettings value);
	boolean validateName(String value);
	boolean validateVersion(String value);
	boolean validateBuild(String value);
	boolean validateFileTimeStamp(long value);
}
