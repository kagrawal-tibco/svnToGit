/**
 * @description 
 */
void rulefunction Monitoring.RuleFunctions.cqueries.locksQueryListener {
	attribute {
		validity = ACTION;
	}
	scope {
		String	resultName;
		boolean	isBatchEnd;
		boolean	hasEnded;
		Object	row;
		Object	closure;
	}
	body {
		if (isBatchEnd) {
		    return;
		} else if (hasEnded) {
		    return;
		} else {
		    Object[] columns = row;
		    if(columns == null) return;
		    String host = columns[0];
		    String metricname = columns[1];
		    long startTime = columns[2];
		    long endTime = columns[3];
		    long count = columns[4];
		    boolean newOrUpdate = columns[5];
		    Monitoring.Events.bemetrics.ConcurrentLockMetricEvent event = Monitoring.Events.bemetrics.ConcurrentLockMetricEvent.ConcurrentLockMetricEvent(
		        null,null,-1,false,false,-1,"",host,metricname,startTime,endTime,count,newOrUpdate);
		    Event.sendEvent(event);
		}
	}
}