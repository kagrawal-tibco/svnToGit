/**
 * @description 
 */
void rulefunction Shared.RuleFunctions.topology.doTplgyDiscovery {
	attribute {
		validity = ACTION;
	}
	scope {
		
		String cacheMode;
		Shared.Concepts.MonitorableEntity site;
	}
	body {
		boolean foundChild;
		Shared.Concepts.MonitorableEntity cluster;
		
		if (cacheMode == "In-Memory") {
			for(int i=0; i<site.children@length;i++) {		//For working with multiple clusters
	    		cluster = site.children[i];
	    		
        		cluster.previousActiveState = String.valueOfBoolean(cluster.active);
        		
        		//true if child found, false ow
        		cluster.active= discoverInMemChildren(cluster,cluster@extId);
    		}
		} else { //Either Tibco or Coherence cluster(s)
			for(int i=0; i<site.children@length;i++) {		//For working with multiple clusters
	    		cluster = site.children[i];
	    		
	        	cluster.previousActiveState = String.valueOfBoolean(cluster.active);

        		//true if child found, false ow
        		cluster.active= discoverChildren(cluster,cluster@extId);
    		}
		}
	}
}