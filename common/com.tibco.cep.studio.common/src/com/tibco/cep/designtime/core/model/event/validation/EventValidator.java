/**
 *
 * $Id$
 */
package com.tibco.cep.designtime.core.model.event.validation;

import com.tibco.cep.designtime.core.model.TIMEOUT_UNITS;

import com.tibco.cep.designtime.core.model.element.PropertyDefinition;

import com.tibco.cep.designtime.core.model.event.EVENT_TYPE;
import com.tibco.cep.designtime.core.model.event.Event;
import com.tibco.cep.designtime.core.model.event.ImportRegistryEntry;
import com.tibco.cep.designtime.core.model.event.NamespaceEntry;

import com.tibco.cep.designtime.core.model.rule.Rule;
import com.tibco.cep.designtime.core.model.rule.RuleSet;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * A sample validator interface for {@link com.tibco.cep.designtime.core.model.event.Event}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface EventValidator {
	boolean validate();

	boolean validateType(EVENT_TYPE value);
	boolean validateSuperEvent(Event value);
	boolean validateSuperEventPath(String value);
	boolean validateSubEvents(EList<Event> value);
	boolean validateAncestorProperties(EList<EObject> value);
	boolean validatePayloadString(String value);
	boolean validateTtl(int value);
	boolean validateTtlUnits(TIMEOUT_UNITS value);
	boolean validateProperties(EList<PropertyDefinition> value);
	boolean validateRuleSet(RuleSet value);
	boolean validateSpecifiedTime(long value);
	boolean validateSerializationFormat(int value);
	boolean validateNamespaceEntries(EList<NamespaceEntry> value);
	boolean validateRegistryImportEntries(EList<ImportRegistryEntry> value);
	boolean validateSubEventsPath(EList<String> value);
	boolean validateExpiryAction(Rule value);
	boolean validatePayload(EObject value);
	boolean validateRetryOnException(boolean value);
}
