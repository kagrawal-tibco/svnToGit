package com.tibco.cep.bpmn.model.designtime.metamodel;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EEnumLiteral;
import com.tibco.cep.bpmn.model.designtime.utils.EEnumWrapper;

/**
**	Generated on 2014.09.09 AD at 02:48:50 IST
**	by BpmnMetaModelInterfaceGenerator
**
**/

public interface BpmnModelClass extends BpmnMetaModelExtension {

	public static Class<BpmnMetaModel> METAMODEL = com.tibco.cep.bpmn.model.designtime.metamodel.BpmnMetaModel.class;
	public static EClass DEFINITIONS = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.DEFINITIONS);
	public static EClass IMPORT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.IMPORT);
	public static EClass PROCESS = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.PROCESS);
	public static EClass AUDITING = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.AUDITING);
	public static EClass MONITORING = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.MONITORING);
	public static EClass LANE = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.LANE);
	public static EClass LANE_SET = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.LANE_SET);
	public static EClass GLOBAL_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.GLOBAL_TASK);
	public static EClass PERFORMER = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.PERFORMER);
	public static EEnum ENUM_PROCESS_TYPE = BpmnMetaModel.INSTANCE.getEnum(BpmnMetaModel.ENUM_PROCESS_TYPE);
	public static EEnumLiteral ENUM_PROCESS_TYPE_NONE = EEnumWrapper.useInstance(ENUM_PROCESS_TYPE).getEnumLiteral(BpmnMetaModel.ENUM_PROCESS_TYPE_NONE);
	public static EEnumLiteral ENUM_PROCESS_TYPE_PUBLIC = EEnumWrapper.useInstance(ENUM_PROCESS_TYPE).getEnumLiteral(BpmnMetaModel.ENUM_PROCESS_TYPE_PUBLIC);
	public static EEnumLiteral ENUM_PROCESS_TYPE_NON_EXECUTABLE = EEnumWrapper.useInstance(ENUM_PROCESS_TYPE).getEnumLiteral(BpmnMetaModel.ENUM_PROCESS_TYPE_NON_EXECUTABLE);
	public static EEnumLiteral ENUM_PROCESS_TYPE_EXECUTABLE = EEnumWrapper.useInstance(ENUM_PROCESS_TYPE).getEnumLiteral(BpmnMetaModel.ENUM_PROCESS_TYPE_EXECUTABLE);
	public static EClass DATA_STATE = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.DATA_STATE);
	public static EClass INPUT_OUTPUT_SPECIFICATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.INPUT_OUTPUT_SPECIFICATION);
	public static EClass INPUT_SET = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.INPUT_SET);
	public static EClass DATA_INPUT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.DATA_INPUT);
	public static EClass ITEM_AWARE_ELEMENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.ITEM_AWARE_ELEMENT);
	public static EClass DATA_OUTPUT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.DATA_OUTPUT);
	public static EClass INPUT_OUTPUT_BINDING = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.INPUT_OUTPUT_BINDING);
	public static EClass PROPERTY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.PROPERTY);
	public static EClass DATA_OUTPUT_ASSOCIATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.DATA_OUTPUT_ASSOCIATION);
	public static EClass DATA_ASSOCIATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.DATA_ASSOCIATION);
	public static EClass ASSIGNMENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.ASSIGNMENT);
	public static EClass DATA_INPUT_ASSOCIATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.DATA_INPUT_ASSOCIATION);
	public static EClass DATA_OBJECT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.DATA_OBJECT);
	public static EClass DATA_STORE = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.DATA_STORE);
	public static EClass DATA_STORE_REFERENCE = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.DATA_STORE_REFERENCE);
	public static EClass OUTPUT_SET = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.OUTPUT_SET);
	public static EClass SERVICE_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.SERVICE_TASK);
	public static EClass TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.TASK);
	public static EEnum ENUM_IMPLEMENTATION = BpmnMetaModel.INSTANCE.getEnum(BpmnMetaModel.ENUM_IMPLEMENTATION);
	public static EEnumLiteral ENUM_IMPLEMENTATION_WEB_SERVICE = EEnumWrapper.useInstance(ENUM_IMPLEMENTATION).getEnumLiteral(BpmnMetaModel.ENUM_IMPLEMENTATION_WEB_SERVICE);
	public static EEnumLiteral ENUM_IMPLEMENTATION_OTHER = EEnumWrapper.useInstance(ENUM_IMPLEMENTATION).getEnumLiteral(BpmnMetaModel.ENUM_IMPLEMENTATION_OTHER);
	public static EEnumLiteral ENUM_IMPLEMENTATION_UNSPECIFIED = EEnumWrapper.useInstance(ENUM_IMPLEMENTATION).getEnumLiteral(BpmnMetaModel.ENUM_IMPLEMENTATION_UNSPECIFIED);
	public static EClass SUB_PROCESS = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.SUB_PROCESS);
	public static EClass LOOP_CHARACTERISTICS = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.LOOP_CHARACTERISTICS);
	public static EEnum ENUM_MULTI_INSTANCE_BEHAVIOR = BpmnMetaModel.INSTANCE.getEnum(BpmnMetaModel.ENUM_MULTI_INSTANCE_BEHAVIOR);
	public static EEnumLiteral ENUM_MULTI_INSTANCE_BEHAVIOR_NONE = EEnumWrapper.useInstance(ENUM_MULTI_INSTANCE_BEHAVIOR).getEnumLiteral(BpmnMetaModel.ENUM_MULTI_INSTANCE_BEHAVIOR_NONE);
	public static EEnumLiteral ENUM_MULTI_INSTANCE_BEHAVIOR_ONE = EEnumWrapper.useInstance(ENUM_MULTI_INSTANCE_BEHAVIOR).getEnumLiteral(BpmnMetaModel.ENUM_MULTI_INSTANCE_BEHAVIOR_ONE);
	public static EEnumLiteral ENUM_MULTI_INSTANCE_BEHAVIOR_ALL = EEnumWrapper.useInstance(ENUM_MULTI_INSTANCE_BEHAVIOR).getEnumLiteral(BpmnMetaModel.ENUM_MULTI_INSTANCE_BEHAVIOR_ALL);
	public static EEnumLiteral ENUM_MULTI_INSTANCE_BEHAVIOR_COMPLEX = EEnumWrapper.useInstance(ENUM_MULTI_INSTANCE_BEHAVIOR).getEnumLiteral(BpmnMetaModel.ENUM_MULTI_INSTANCE_BEHAVIOR_COMPLEX);
	public static EClass MULTI_INSTANCE_LOOP_CHARACTERISTICS = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.MULTI_INSTANCE_LOOP_CHARACTERISTICS);
	public static EClass COMPLEX_BEHAVIOR_DEFINITION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.COMPLEX_BEHAVIOR_DEFINITION);
	public static EClass STANDARD_LOOP_CHARACTERISTICS = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.STANDARD_LOOP_CHARACTERISTICS);
	public static EClass CALL_ACTIVITY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CALL_ACTIVITY);
	public static EClass SEND_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.SEND_TASK);
	public static EClass RECEIVE_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.RECEIVE_TASK);
	public static EClass SCRIPT_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.SCRIPT_TASK);
	public static EClass BUSINESS_RULE_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.BUSINESS_RULE_TASK);
	public static EClass AD_HOC_SUB_PROCESS = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.AD_HOC_SUB_PROCESS);
	public static EEnum ENUM_AD_HOC_ORDERING = BpmnMetaModel.INSTANCE.getEnum(BpmnMetaModel.ENUM_AD_HOC_ORDERING);
	public static EEnumLiteral ENUM_AD_HOC_ORDERING_PARALLEL = EEnumWrapper.useInstance(ENUM_AD_HOC_ORDERING).getEnumLiteral(BpmnMetaModel.ENUM_AD_HOC_ORDERING_PARALLEL);
	public static EEnumLiteral ENUM_AD_HOC_ORDERING_SEQUENTIAL = EEnumWrapper.useInstance(ENUM_AD_HOC_ORDERING).getEnumLiteral(BpmnMetaModel.ENUM_AD_HOC_ORDERING_SEQUENTIAL);
	public static EClass TRANSACTION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.TRANSACTION);
	public static EEnum ENUM_TRANSACTION_METHOD = BpmnMetaModel.INSTANCE.getEnum(BpmnMetaModel.ENUM_TRANSACTION_METHOD);
	public static EEnumLiteral ENUM_TRANSACTION_METHOD_COMPENSATE = EEnumWrapper.useInstance(ENUM_TRANSACTION_METHOD).getEnumLiteral(BpmnMetaModel.ENUM_TRANSACTION_METHOD_COMPENSATE);
	public static EEnumLiteral ENUM_TRANSACTION_METHOD_STORE = EEnumWrapper.useInstance(ENUM_TRANSACTION_METHOD).getEnumLiteral(BpmnMetaModel.ENUM_TRANSACTION_METHOD_STORE);
	public static EEnumLiteral ENUM_TRANSACTION_METHOD_IMAGE = EEnumWrapper.useInstance(ENUM_TRANSACTION_METHOD).getEnumLiteral(BpmnMetaModel.ENUM_TRANSACTION_METHOD_IMAGE);
	public static EClass GLOBAL_SCRIPT_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.GLOBAL_SCRIPT_TASK);
	public static EClass ACTIVITY_RESOURCE = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.ACTIVITY_RESOURCE);
	public static EClass RESOURCE_PARAMETER_BINDING = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.RESOURCE_PARAMETER_BINDING);
	public static EClass RESOURCE_ASSIGNMENT_EXPRESSION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.RESOURCE_ASSIGNMENT_EXPRESSION);
	public static EClass GLOBAL_BUSINESS_RULE_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.GLOBAL_BUSINESS_RULE_TASK);
	public static EClass ACTIVITY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.ACTIVITY);
	public static EClass RULE_FUNCTION_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.RULE_FUNCTION_TASK);
	public static EClass INFERENCE_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.INFERENCE_TASK);
	public static EClass JAVA_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.JAVA_TASK);
	public static EEnum ENUM_LOOP_TYPE = BpmnMetaModel.INSTANCE.getEnum(BpmnMetaModel.ENUM_LOOP_TYPE);
	public static EEnumLiteral ENUM_LOOP_TYPE_NONE = EEnumWrapper.useInstance(ENUM_LOOP_TYPE).getEnumLiteral(BpmnMetaModel.ENUM_LOOP_TYPE_NONE);
	public static EEnumLiteral ENUM_LOOP_TYPE_ITERATOR = EEnumWrapper.useInstance(ENUM_LOOP_TYPE).getEnumLiteral(BpmnMetaModel.ENUM_LOOP_TYPE_ITERATOR);
	public static EEnumLiteral ENUM_LOOP_TYPE_COUNT = EEnumWrapper.useInstance(ENUM_LOOP_TYPE).getEnumLiteral(BpmnMetaModel.ENUM_LOOP_TYPE_COUNT);
	public static EClass ITERARTOR_DATATYPE = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.ITERARTOR_DATATYPE);
	public static EClass MOVE_TO_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.MOVE_TO_TASK);
	public static EClass GLOBAL_MANUAL_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.GLOBAL_MANUAL_TASK);
	public static EClass MANUAL_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.MANUAL_TASK);
	public static EClass USER_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.USER_TASK);
	public static EClass RENDERING = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.RENDERING);
	public static EEnum ENUM_USER_TASK_IMPLEMENTATION = BpmnMetaModel.INSTANCE.getEnum(BpmnMetaModel.ENUM_USER_TASK_IMPLEMENTATION);
	public static EEnumLiteral ENUM_USER_TASK_IMPLEMENTATION_UNSPECIFIED = EEnumWrapper.useInstance(ENUM_USER_TASK_IMPLEMENTATION).getEnumLiteral(BpmnMetaModel.ENUM_USER_TASK_IMPLEMENTATION_UNSPECIFIED);
	public static EEnumLiteral ENUM_USER_TASK_IMPLEMENTATION_OTHER = EEnumWrapper.useInstance(ENUM_USER_TASK_IMPLEMENTATION).getEnumLiteral(BpmnMetaModel.ENUM_USER_TASK_IMPLEMENTATION_OTHER);
	public static EEnumLiteral ENUM_USER_TASK_IMPLEMENTATION_WEB_SERVICE = EEnumWrapper.useInstance(ENUM_USER_TASK_IMPLEMENTATION).getEnumLiteral(BpmnMetaModel.ENUM_USER_TASK_IMPLEMENTATION_WEB_SERVICE);
	public static EEnumLiteral ENUM_USER_TASK_IMPLEMENTATION_HUMAN_TASK_WEBSERVICE = EEnumWrapper.useInstance(ENUM_USER_TASK_IMPLEMENTATION).getEnumLiteral(BpmnMetaModel.ENUM_USER_TASK_IMPLEMENTATION_HUMAN_TASK_WEBSERVICE);
	public static EClass HUMAN_PERFORMER = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.HUMAN_PERFORMER);
	public static EClass POTENTIAL_OWNER = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.POTENTIAL_OWNER);
	public static EClass GLOBAL_USER_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.GLOBAL_USER_TASK);
	public static EClass OPERATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.OPERATION);
	public static EClass END_POINT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.END_POINT);
	public static EClass INTERFACE = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.INTERFACE);
	public static EClass ROOT_ELEMENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.ROOT_ELEMENT);
	public static EClass RELATIONSHIP = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.RELATIONSHIP);
	public static EClass EXTENSION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.EXTENSION);
	public static EClass EXTENSION_DEFINITION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.EXTENSION_DEFINITION);
	public static EClass EXTENSION_ATTRIBUTE_DEFINITION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.EXTENSION_ATTRIBUTE_DEFINITION);
	public static EClass EXTENSION_ATTRIBUTE_VALUE = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.EXTENSION_ATTRIBUTE_VALUE);
	public static EEnum ENUM_RELATIONSHIP_DIRECTION = BpmnMetaModel.INSTANCE.getEnum(BpmnMetaModel.ENUM_RELATIONSHIP_DIRECTION);
	public static EEnumLiteral ENUM_RELATIONSHIP_DIRECTION_NONE = EEnumWrapper.useInstance(ENUM_RELATIONSHIP_DIRECTION).getEnumLiteral(BpmnMetaModel.ENUM_RELATIONSHIP_DIRECTION_NONE);
	public static EEnumLiteral ENUM_RELATIONSHIP_DIRECTION_FORWARD = EEnumWrapper.useInstance(ENUM_RELATIONSHIP_DIRECTION).getEnumLiteral(BpmnMetaModel.ENUM_RELATIONSHIP_DIRECTION_FORWARD);
	public static EEnumLiteral ENUM_RELATIONSHIP_DIRECTION_BACKWARD = EEnumWrapper.useInstance(ENUM_RELATIONSHIP_DIRECTION).getEnumLiteral(BpmnMetaModel.ENUM_RELATIONSHIP_DIRECTION_BACKWARD);
	public static EEnumLiteral ENUM_RELATIONSHIP_DIRECTION_BOTH = EEnumWrapper.useInstance(ENUM_RELATIONSHIP_DIRECTION).getEnumLiteral(BpmnMetaModel.ENUM_RELATIONSHIP_DIRECTION_BOTH);
	public static EClass DOCUMENTATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.DOCUMENTATION);
	public static EClass EXTERNAL_DOMAIN_OBJECT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.EXTERNAL_DOMAIN_OBJECT);
	public static EClass BASE_ELEMENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.BASE_ELEMENT);
	public static EClass SERIALIZABLE_ELEMENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.SERIALIZABLE_ELEMENT);
	public static EClass MESSAGE = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.MESSAGE);
	public static EClass ITEM_DEFINITION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.ITEM_DEFINITION);
	public static EEnum ENUM_ITEM_KIND = BpmnMetaModel.INSTANCE.getEnum(BpmnMetaModel.ENUM_ITEM_KIND);
	public static EEnumLiteral ENUM_ITEM_KIND_PHYSICAL = EEnumWrapper.useInstance(ENUM_ITEM_KIND).getEnumLiteral(BpmnMetaModel.ENUM_ITEM_KIND_PHYSICAL);
	public static EEnumLiteral ENUM_ITEM_KIND_INFORMATION = EEnumWrapper.useInstance(ENUM_ITEM_KIND).getEnumLiteral(BpmnMetaModel.ENUM_ITEM_KIND_INFORMATION);
	public static EClass ERROR = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.ERROR);
	public static EClass CORRELATION_PROPERTY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CORRELATION_PROPERTY);
	public static EClass CORRELATION_PROPERTY_RETRIEVAL_EXPRESSION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CORRELATION_PROPERTY_RETRIEVAL_EXPRESSION);
	public static EClass FORMAL_EXPRESSION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.FORMAL_EXPRESSION);
	public static EClass EXPRESSION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.EXPRESSION);
	public static EClass INTERACTION_SPECIFICATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.INTERACTION_SPECIFICATION);
	public static EClass PARTICIPANT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.PARTICIPANT);
	public static EClass MESSAGE_FLOW_NODE = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.MESSAGE_FLOW_NODE);
	public static EClass PARTNER_ROLE = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.PARTNER_ROLE);
	public static EClass PARTNER_ENTITY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.PARTNER_ENTITY);
	public static EClass PARTICIPANT_MULTIPLICITY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.PARTICIPANT_MULTIPLICITY);
	public static EClass MESSAGE_FLOW = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.MESSAGE_FLOW);
	public static EClass FLOW_ELEMENTS_CONTAINER = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.FLOW_ELEMENTS_CONTAINER);
	public static EClass FLOW_ELEMENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.FLOW_ELEMENT);
	public static EClass FLOW_NODE = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.FLOW_NODE);
	public static EClass SEQUENCE_FLOW = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.SEQUENCE_FLOW);
	public static EClass PARTICIPANT_ASSOCIATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.PARTICIPANT_ASSOCIATION);
	public static EClass MESSAGE_FLOW_ASSOCIATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.MESSAGE_FLOW_ASSOCIATION);
	public static EClass CORRELATION_KEY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CORRELATION_KEY);
	public static EClass CONVERSATION_ASSOCIATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CONVERSATION_ASSOCIATION);
	public static EClass RESOURCE = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.RESOURCE);
	public static EClass RESOURCE_PARAMETER = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.RESOURCE_PARAMETER);
	public static EClass CORRELATION_PROPERTY_BINDING = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CORRELATION_PROPERTY_BINDING);
	public static EClass CORRELATION_SUBSCRIPTION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CORRELATION_SUBSCRIPTION);
	public static EClass CALLABLE_ELEMENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CALLABLE_ELEMENT);
	public static EClass TEXT_ANNOTATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.TEXT_ANNOTATION);
	public static EClass ARTIFACT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.ARTIFACT);
	public static EClass GROUP = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.GROUP);
	public static EClass ASSOCIATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.ASSOCIATION);
	public static EEnum ENUM_ASSOCIATION_DIRECTION = BpmnMetaModel.INSTANCE.getEnum(BpmnMetaModel.ENUM_ASSOCIATION_DIRECTION);
	public static EEnumLiteral ENUM_ASSOCIATION_DIRECTION_NONE = EEnumWrapper.useInstance(ENUM_ASSOCIATION_DIRECTION).getEnumLiteral(BpmnMetaModel.ENUM_ASSOCIATION_DIRECTION_NONE);
	public static EEnumLiteral ENUM_ASSOCIATION_DIRECTION_ONE = EEnumWrapper.useInstance(ENUM_ASSOCIATION_DIRECTION).getEnumLiteral(BpmnMetaModel.ENUM_ASSOCIATION_DIRECTION_ONE);
	public static EEnumLiteral ENUM_ASSOCIATION_DIRECTION_BOTH = EEnumWrapper.useInstance(ENUM_ASSOCIATION_DIRECTION).getEnumLiteral(BpmnMetaModel.ENUM_ASSOCIATION_DIRECTION_BOTH);
	public static EClass CATEGORY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CATEGORY);
	public static EClass CATEGORY_VALUE = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CATEGORY_VALUE);
	public static EClass EVENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.EVENT);
	public static EClass INTERMEDIATE_CATCH_EVENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.INTERMEDIATE_CATCH_EVENT);
	public static EClass CATCH_EVENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CATCH_EVENT);
	public static EClass EVENT_DEFINITION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.EVENT_DEFINITION);
	public static EClass INTERMEDIATE_THROW_EVENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.INTERMEDIATE_THROW_EVENT);
	public static EClass THROW_EVENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.THROW_EVENT);
	public static EClass END_EVENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.END_EVENT);
	public static EClass START_EVENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.START_EVENT);
	public static EClass BOUNDARY_EVENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.BOUNDARY_EVENT);
	public static EClass IMPLICIT_THROW_EVENT = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.IMPLICIT_THROW_EVENT);
	public static EClass CANCEL_EVENT_DEFINITION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CANCEL_EVENT_DEFINITION);
	public static EClass ERROR_EVENT_DEFINITION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.ERROR_EVENT_DEFINITION);
	public static EClass TERMINATE_EVENT_DEFINITION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.TERMINATE_EVENT_DEFINITION);
	public static EClass ESCALATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.ESCALATION);
	public static EClass ESCALATION_EVENT_DEFINITION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.ESCALATION_EVENT_DEFINITION);
	public static EClass COMPENSATE_EVENT_DEFINITION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.COMPENSATE_EVENT_DEFINITION);
	public static EClass TIMER_EVENT_DEFINITION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.TIMER_EVENT_DEFINITION);
	public static EClass LINK_EVENT_DEFINITION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.LINK_EVENT_DEFINITION);
	public static EClass MESSAGE_EVENT_DEFINITION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.MESSAGE_EVENT_DEFINITION);
	public static EClass CONDITIONAL_EVENT_DEFINITION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CONDITIONAL_EVENT_DEFINITION);
	public static EClass SIGNAL_EVENT_DEFINITION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.SIGNAL_EVENT_DEFINITION);
	public static EClass SIGNAL = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.SIGNAL);
	public static EClass GATEWAY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.GATEWAY);
	public static EEnum ENUM_GATEWAY_DIRECTION = BpmnMetaModel.INSTANCE.getEnum(BpmnMetaModel.ENUM_GATEWAY_DIRECTION);
	public static EEnumLiteral ENUM_GATEWAY_DIRECTION_UNSPECIFIED = EEnumWrapper.useInstance(ENUM_GATEWAY_DIRECTION).getEnumLiteral(BpmnMetaModel.ENUM_GATEWAY_DIRECTION_UNSPECIFIED);
	public static EEnumLiteral ENUM_GATEWAY_DIRECTION_CONVERGING = EEnumWrapper.useInstance(ENUM_GATEWAY_DIRECTION).getEnumLiteral(BpmnMetaModel.ENUM_GATEWAY_DIRECTION_CONVERGING);
	public static EEnumLiteral ENUM_GATEWAY_DIRECTION_DIVERGING = EEnumWrapper.useInstance(ENUM_GATEWAY_DIRECTION).getEnumLiteral(BpmnMetaModel.ENUM_GATEWAY_DIRECTION_DIVERGING);
	public static EEnumLiteral ENUM_GATEWAY_DIRECTION_MIXED = EEnumWrapper.useInstance(ENUM_GATEWAY_DIRECTION).getEnumLiteral(BpmnMetaModel.ENUM_GATEWAY_DIRECTION_MIXED);
	public static EClass EVENT_BASED_GATEWAY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.EVENT_BASED_GATEWAY);
	public static EEnum ENUM_EVENT_BASED_GATEWAY_TYPE = BpmnMetaModel.INSTANCE.getEnum(BpmnMetaModel.ENUM_EVENT_BASED_GATEWAY_TYPE);
	public static EEnumLiteral ENUM_EVENT_BASED_GATEWAY_TYPE_PARALLEL = EEnumWrapper.useInstance(ENUM_EVENT_BASED_GATEWAY_TYPE).getEnumLiteral(BpmnMetaModel.ENUM_EVENT_BASED_GATEWAY_TYPE_PARALLEL);
	public static EEnumLiteral ENUM_EVENT_BASED_GATEWAY_TYPE_EXCLUSIVE = EEnumWrapper.useInstance(ENUM_EVENT_BASED_GATEWAY_TYPE).getEnumLiteral(BpmnMetaModel.ENUM_EVENT_BASED_GATEWAY_TYPE_EXCLUSIVE);
	public static EClass COMPLEX_GATEWAY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.COMPLEX_GATEWAY);
	public static EClass EXCLUSIVE_GATEWAY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.EXCLUSIVE_GATEWAY);
	public static EClass INCLUSIVE_GATEWAY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.INCLUSIVE_GATEWAY);
	public static EClass PARALLEL_GATEWAY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.PARALLEL_GATEWAY);
	public static EClass CALL_CONVERSATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CALL_CONVERSATION);
	public static EClass CONVERSATION_NODE = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CONVERSATION_NODE);
	public static EClass COMMUNICATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.COMMUNICATION);
	public static EClass SUB_CONVERSATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.SUB_CONVERSATION);
	public static EClass CONVERSATION_CONTAINER = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CONVERSATION_CONTAINER);
	public static EClass GLOBAL_COMMUNICATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.GLOBAL_COMMUNICATION);
	public static EClass CONVERSATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CONVERSATION);
	public static EClass COLLABORATION = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.COLLABORATION);
	public static EClass GLOBAL_CHOREOGRAPHY_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.GLOBAL_CHOREOGRAPHY_TASK);
	public static EClass CHOREOGRAPHY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CHOREOGRAPHY);
	public static EClass CHOREOGRAPHY_ACTIVITY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CHOREOGRAPHY_ACTIVITY);
	public static EClass CALL_CHOREOGRAPHY_ACTIVITY = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CALL_CHOREOGRAPHY_ACTIVITY);
	public static EClass CHOREGRAPHY_SUB_PROCESS = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CHOREGRAPHY_SUB_PROCESS);
	public static EClass CHOREOGRAPHY_TASK = BpmnMetaModel.INSTANCE.getEClass(BpmnMetaModel.CHOREOGRAPHY_TASK);

}
