/**
 * @description Create a new concept
 * @author 
 */
rule Rules.AlertRuleSet.CreateConcept_SendAlert {
	attribute {
		priority = 7;
		forwardChain = true;
	}
	declare {
		Events.InputAlertEvent	inputalertevent;
		
	}
	when {
		
	}
	then {
		System.debugOut("AlertId: " + inputalertevent.AlertId + " : Node Id : " + inputalertevent.NodeId + " : Concept does not exist.... Creating now and forwarding event");
		Instance.createInstance("xslt://{{/AlertConcept}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\" exclude-result-prefixes=\"xsd xsl\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"inputalertevent\"/>\n    <xsl:template match=\"/\">\n        <createObject>\n            <object>\n                <xsl:if test=\"$inputalertevent/NodeId\">\n                    <NodeId>\n                        <xsl:value-of select=\"$inputalertevent/NodeId\"/>\n                    </NodeId>\n                </xsl:if>\n                <xsl:if test=\"$inputalertevent/CategoryId\">\n                    <CategoryId>\n                        <xsl:value-of select=\"$inputalertevent/CategoryId\"/>\n                    </CategoryId>\n                </xsl:if>\n                <xsl:if test=\"$inputalertevent/Timestamp\">\n                    <Timestamp>\n                        <xsl:value-of select=\"$inputalertevent/Timestamp\"/>\n                    </Timestamp>\n                </xsl:if>\n                <xsl:if test=\"$inputalertevent/AlertId\">\n                    <AlertId>\n                        <xsl:value-of select=\"$inputalertevent/AlertId\"/>\n                    </AlertId>\n                </xsl:if>\n            </object>\n        </createObject>\n    </xsl:template>\n</xsl:stylesheet>");
		//Event.sendEvent(Event.createEvent("xslt://{{/Events/OutputAlertEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\" exclude-result-prefixes=\"xsd xsl\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"inputalertevent\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <xsl:if test=\"$inputalertevent/AlertId\">\n                    <AlertId>\n                        <xsl:value-of select=\"$inputalertevent/AlertId\"/>\n                    </AlertId>\n                </xsl:if>\n                <xsl:if test=\"$inputalertevent/NodeId\">\n                    <NodeId>\n                        <xsl:value-of select=\"$inputalertevent/NodeId\"/>\n                    </NodeId>\n                </xsl:if>\n                <xsl:if test=\"$inputalertevent/CategoryId\">\n                    <CategoryId>\n                        <xsl:value-of select=\"$inputalertevent/CategoryId\"/>\n                    </CategoryId>\n                </xsl:if>\n                <xsl:if test=\"$inputalertevent/Timestamp\">\n                    <Timestamp>\n                        <xsl:value-of select=\"$inputalertevent/Timestamp\"/>\n                    </Timestamp>\n                </xsl:if>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
		Rules.RuleFunctions.AlertFunction(Event.createEvent("xslt://{{/Events/OutputAlertEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\" exclude-result-prefixes=\"xsd xsl\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"inputalertevent\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <xsl:if test=\"$inputalertevent/AlertId\">\n                    <AlertId>\n                        <xsl:value-of select=\"$inputalertevent/AlertId\"/>\n                    </AlertId>\n                </xsl:if>\n                <xsl:if test=\"$inputalertevent/NodeId\">\n                    <NodeId>\n                        <xsl:value-of select=\"$inputalertevent/NodeId\"/>\n                    </NodeId>\n                </xsl:if>\n                <xsl:if test=\"$inputalertevent/CategoryId\">\n                    <CategoryId>\n                        <xsl:value-of select=\"$inputalertevent/CategoryId\"/>\n                    </CategoryId>\n                </xsl:if>\n                <xsl:if test=\"$inputalertevent/Timestamp\">\n                    <Timestamp>\n                        <xsl:value-of select=\"$inputalertevent/Timestamp\"/>\n                    </Timestamp>\n                </xsl:if>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
		Event.consumeEvent(inputalertevent);
	}
}