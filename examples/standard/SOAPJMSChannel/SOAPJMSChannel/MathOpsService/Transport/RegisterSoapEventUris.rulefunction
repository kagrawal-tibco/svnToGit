/**
 * @description Generated during WSDL import. This function registers specific event types for use in some SOAP deserializers.
 */
void rulefunction MathOpsService.Transport.RegisterSoapEventUris {
	attribute {
		validity = ACTION;
	}
	scope {
		
	}
	body {
		String eventUri, destination, service, soapAction, preprocessor;
		
		// input for [Add] @ [MathOps]
		service = "MathOpsService";
		eventUri = "/MathOpsService/MathOps/Events/AddRequestMsg";
		destination = "/Channels/SoapJms/queue_mathops";
		soapAction = "Add";
		preprocessor = "/MathOpsService/MathOps/RuleFunctions/Add";
		SOAP.registerEventUri(eventUri, destination, service, soapAction, preprocessor);
		SOAP.registerEventUri(eventUri, destination, "",      soapAction, preprocessor);
		
		// input for [Multiply] @ [MathOps]
		service = "MathOpsService";
		eventUri = "/MathOpsService/MathOps/Events/MultiplyRequestMsg";
		destination = "/Channels/SoapJms/queue_mathops";
		soapAction = "Multiply";
		preprocessor = "/MathOpsService/MathOps/RuleFunctions/Multiply";
		SOAP.registerEventUri(eventUri, destination, service, soapAction, preprocessor);
		SOAP.registerEventUri(eventUri, destination, "",      soapAction, preprocessor);
		
		// input for [Subtract] @ [MathOps]
		service = "MathOpsService";
		eventUri = "/MathOpsService/MathOps/Events/SubtractRequestMsg";
		destination = "/Channels/SoapJms/queue_mathops";
		soapAction = "Subtract";
		preprocessor = "/MathOpsService/MathOps/RuleFunctions/Subtract";
		SOAP.registerEventUri(eventUri, destination, service, soapAction, preprocessor);
		SOAP.registerEventUri(eventUri, destination, "",      soapAction, preprocessor);
		
		// input for [Divide] @ [MathOps]
		service = "MathOpsService";
		eventUri = "/MathOpsService/MathOps/Events/DivideRequestMsg";
		destination = "/Channels/SoapJms/queue_mathops";
		soapAction = "Divide";
		preprocessor = "/MathOpsService/MathOps/RuleFunctions/Divide";
		SOAP.registerEventUri(eventUri, destination, service, soapAction, preprocessor);
		SOAP.registerEventUri(eventUri, destination, "",      soapAction, preprocessor);
	}
}