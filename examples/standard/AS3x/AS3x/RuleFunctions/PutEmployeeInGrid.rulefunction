/**
 * @description 
 */
void rulefunction RuleFunctions.PutEmployeeInGrid {
	attribute {
		validity = ACTION;
	}
	scope {
		Events.PutEmployee putEmployee;
	}
	body {
		String asURL = "http://localhost:5055";
		
		String containerName = "Employee";
		
		Store.open(asURL, containerName);
		
		Address add1 = null, add2 = null;
		if (putEmployee.address != null || putEmployee.alternateAddress != null) {
			if (putEmployee.address != null) {
				add1 = Concepts.Address.Address(null, putEmployee.address, System.nanoTime());
				System.debugOut("Put Address[" + putEmployee.address + "] with Id[" + add1.addressId + "]");
			}
			if (putEmployee.alternateAddress != null) {
			 	add2 = Concepts.Address.Address(null, putEmployee.alternateAddress, System.nanoTime());
			 	System.debugOut("Put Alternate Address[" + putEmployee.alternateAddress + "] with Id[" + add2.addressId + "]");
			}
		}
		
		Phone ph = null;
		if (putEmployee.homePhone != null || putEmployee.mobilePhone != null) {
			ph = Concepts.Phone.Phone(null, putEmployee.homePhone, putEmployee.mobilePhone, System.nanoTime());
			System.debugOut("Put Phone[" + putEmployee.homePhone + ":"  + putEmployee.mobilePhone + "] with Id[" + ph.phoneId + "]");
		}
		
		String[] departments = null;
		if (putEmployee.departments != null) departments = String.split(putEmployee.departments, ",");
		
		// put Employee
		Concepts.Employee employee = Concepts.Employee.Employee(null, System.nanoTime(), putEmployee.name, putEmployee.age, DateTime.now(), putEmployee.isPermanant, putEmployee.salary, null, ph, departments);
		if (add1 != null) Instance.PropertyArray.appendContainedConcept(employee.address, add1, 1L);
		if (add2 != null) Instance.PropertyArray.appendContainedConcept(employee.address, add2, 1L);
		Store.put(asURL, containerName, employee);
		System.debugOut("Put Employee[" + putEmployee.name + "] with Id[" + employee.empId + "]");
		
		Store.close(asURL, containerName);
		
		Event.replyEvent(putEmployee, putEmployee);
	}
}