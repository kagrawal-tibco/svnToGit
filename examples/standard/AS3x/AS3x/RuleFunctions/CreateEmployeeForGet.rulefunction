/**
 * @description 
 */
Concepts.Employee rulefunction RuleFunctions.CreateEmployeeForGet {
	attribute {
		validity = ACTION;
	}
	scope {
		Events.GetEmployee getEmployee;
	}
	body {
		Address add1 = null, add2 = null;
		if (getEmployee.addressId != null) {
			String[] addressIds = String.split(getEmployee.addressId, ",");
			if (addressIds@length > 0 && addressIds@length <= 2) {
				add1 = Concepts.Address.Address(null, null, Number.longValue(addressIds[0], 10));
				if (addressIds@length == 2) add2 = Concepts.Address.Address(null, null, Number.longValue(addressIds[1], 10));
			}
		}
		
		Phone getPhone =  null;
		if (getEmployee.phoneId != null) {
			getPhone = Concepts.Phone.Phone(null, null, null, Number.longValue(getEmployee.phoneId, 10));
		}
		
		Concepts.Employee getEmp = Concepts.Employee.Employee(null, Number.longValue(getEmployee.empId, 10), null, 0, null, false, 0, null, getPhone, null);
		if (add1 != null) Instance.PropertyArray.appendContainedConcept(getEmp.address, add1, 1L);
		if (add2 != null) Instance.PropertyArray.appendContainedConcept(getEmp.address, add2, 1L);
		
		return getEmp;
	}
}