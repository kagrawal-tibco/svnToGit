<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<cluster xmlns="http://tibco.com/businessevents/configuration/5.6">
    <revision>
        <version>15</version>
        <author>shivkumarchelwa</author>
        <date>2019/10/17 18:56:52</date>
        <comment/>
    </revision>
    <name>KafkaStreams</name>
    <message-encoding>UTF-8</message-encoding>
    <object-management>
        <memory-manager/>
        <db-concepts>
            <db-uris/>
            <check-interval>60</check-interval>
            <inactivity-timeout>0</inactivity-timeout>
            <initial-size>5</initial-size>
            <max-size>5</max-size>
            <min-size>5</min-size>
            <property-check-interval>900</property-check-interval>
            <retry-count>-1</retry-count>
            <wait-timeout>1</wait-timeout>
        </db-concepts>
    </object-management>
    <rulesets>
        <rules id="Producer">
            <uri>/Rules/ReplenishInventory</uri>
            <uri>/Rules/PublishInventory</uri>
            <uri>/Rules/CreateOrderRule</uri>
        </rules>
        <rules id="Streams">
            <uri>/Rules/PublishReplenishment</uri>
            <uri>/Rules/CustomerOrderCount</uri>
        </rules>
    </rulesets>
    <function-groups>
        <functions id="all-functions">
            <uri>/</uri>
        </functions>
    </function-groups>
    <destination-groups>
        <destinations id="KafkaStreams">
            <destination id="Orders_11D15B68">
                <pre-processor/>
                <queue-size>0</queue-size>
                <thread-count/>
                <threading-model>shared-queue</threading-model>
                <thread-affinity-rule-function/>
                <uri>/Channels/KafkaStreams/OrderStream</uri>
            </destination>
            <destination id="CustomerOrderCount_C8999A7">
                <pre-processor/>
                <queue-size>0</queue-size>
                <thread-count/>
                <threading-model>shared-queue</threading-model>
                <thread-affinity-rule-function/>
                <uri>/Channels/KafkaStreams/CustomerOrderCount</uri>
            </destination>
        </destinations>
        <destinations id="KafkaProducer">
            <destination id="ReplenInventory_531397BB">
                <pre-processor/>
                <queue-size>0</queue-size>
                <thread-count/>
                <threading-model>caller</threading-model>
                <thread-affinity-rule-function/>
                <uri>/Channels/Kafka/ReplenInventory</uri>
            </destination>
        </destinations>
    </destination-groups>
    <process-groups/>
    <log-configs>
        <log-config id="logConfig">
            <enabled>true</enabled>
            <roles>*:info</roles>
            <files>
                <enabled>true</enabled>
                <dir>logs</dir>
                <name/>
                <max-number>10</max-number>
                <max-size>5000000</max-size>
                <append>true</append>
            </files>
            <terminal>
                <enabled/>
                <sys-out-redirect>false</sys-out-redirect>
                <sys-err-redirect>false</sys-err-redirect>
                <encoding/>
            </terminal>
            <line-layout>
                <enabled>false</enabled>
                <class/>
                <arg/>
            </line-layout>
        </log-config>
    </log-configs>
    <agent-classes>
        <inference-agent-class id="inference-class_streams">
            <rules>
                <ref>Streams</ref>
            </rules>
            <destinations>
                <ref>KafkaStreams</ref>
            </destinations>
            <startup/>
            <shutdown/>
            <local-cache>
                <eviction>
                    <max-size>1024</max-size>
                    <max-time>900</max-time>
                </eviction>
            </local-cache>
            <shared-queue>
                <size>1024</size>
                <workers>10</workers>
            </shared-queue>
            <load>
                <max-active/>
            </load>
            <concurrent-rtc>false</concurrent-rtc>
            <check-for-duplicates>false</check-for-duplicates>
            <businessworks>
                <uri/>
            </businessworks>
            <property-group/>
        </inference-agent-class>
        <inference-agent-class id="inference-class_producer">
            <rules>
                <ref>Producer</ref>
            </rules>
            <destinations>
                <ref>KafkaProducer</ref>
            </destinations>
            <startup/>
            <shutdown/>
            <local-cache>
                <eviction>
                    <max-size>1024</max-size>
                    <max-time>900</max-time>
                </eviction>
            </local-cache>
            <shared-queue>
                <size>1024</size>
                <workers>10</workers>
            </shared-queue>
            <load>
                <max-active/>
            </load>
            <concurrent-rtc>false</concurrent-rtc>
            <check-for-duplicates>false</check-for-duplicates>
            <businessworks>
                <uri/>
            </businessworks>
            <property-group/>
        </inference-agent-class>
    </agent-classes>
    <processing-units>
        <processing-unit id="kafka-streams">
            <agents>
                <agent>
                    <ref>inference-class_streams</ref>
                    <key/>
                    <priority/>
                </agent>
            </agents>
            <logs>logConfig</logs>
            <hot-deploy>false</hot-deploy>
            <cache-storage-enabled>false</cache-storage-enabled>
            <db-concepts>false</db-concepts>
            <property-group/>
        </processing-unit>
        <processing-unit id="kafka-producer">
            <agents>
                <agent>
                    <ref>inference-class_producer</ref>
                    <key/>
                    <priority/>
                </agent>
            </agents>
            <logs>logConfig</logs>
            <hot-deploy>false</hot-deploy>
            <cache-storage-enabled>false</cache-storage-enabled>
            <db-concepts>false</db-concepts>
            <property-group>
                <property name="be.kafka.channel.auto.offset.reset" value="latest"/>
            </property-group>
        </processing-unit>
    </processing-units>
    <load-balancer-configs>
        <pair-configs/>
        <adhoc-configs/>
    </load-balancer-configs>
    <property-group>
        <property-group comment="" name="auth">
            <property name="be.mm.auth.type" value="file"/>
            <property name="be.mm.auth.file.location" value="%%BE_HOME%%/mm/config/users.pwd"/>
            <property name="java.security.auth.login.config" value="%%BE_HOME%%/mm/config/jaas-config.config"/>
        </property-group>
    </property-group>
</cluster>
