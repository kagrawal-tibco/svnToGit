/**
 * @description 
 * @author ajayapra-lt
 */
rule Rules.NewEventsInterceptor {
	attribute {
		priority = 10;
		forwardChain = true;
	}
	declare {
		Events.BaseDataRequestEvent basedataevent;
	}
	when {
		
	}
	then {
		System.debugOut("Received [" + basedataevent + "].");	
	
		try{
			Pattern.IO.toPattern(basedataevent);

			//----------------
			
			System.debugOut("Sent [" + basedataevent + "] to Pattern service.");
			
			Events.BaseDataResponseEvent response = CreateDataResponse(basedataevent, ToSuccessXML("Success", false));			
			Event.replyEvent(basedataevent, response);			
		}
		catch(Exception e){
			Events.BaseDataResponseEvent response = CreateDataResponse(basedataevent, ToErrorXML(null, e));			
			Event.replyEvent(basedataevent, response);
		}
				
		Event.consumeEvent(basedataevent);
	}
}