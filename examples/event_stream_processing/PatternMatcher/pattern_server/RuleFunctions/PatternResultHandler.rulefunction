/**
 * @description 
 */
void rulefunction RuleFunctions.PatternResultHandler {
	attribute {
		validity = ACTION;
	}
	scope {
		String	patternDefURI;
		String	patternInstanceName;
		Object	correlationId;
		Object	closure;
		Object	opaque;
		boolean success;
	}
	body {
		String s = "<pattern-result>\n";
		
		s = s + "<pattern-uri><![CDATA[" + patternDefURI + "]]></pattern-uri>\n";
		
		s = s + "<pattern-instance-name><![CDATA[" + patternInstanceName + "]]></pattern-instance-name>\n";
		
		s = s + "<correlation-id><![CDATA[" + correlationId + "]]></correlation-id>\n";
		
		s = s + "<success><![CDATA[" + success + "]]></success>\n";
		
		long[] eventIds = Pattern.Manager.Advanced.getEventIds(opaque);
		String[] eventExtIds = Pattern.Manager.Advanced.getEventExtIds(opaque);
		
		s = s + "<events>\n";
		
		for(int i = 0; i < eventIds@length; i = i + 1){
		    s = s  
		    + "<event>\n" 
		    + "<id>" + eventIds[i] + "</id>\n" 
		    + "<ext-id>" + eventExtIds[i] + "</ext-id>\n"  
		    + "</event>\n";
		}

		s = s + "</events>\n";
				
		s = s + "</pattern-result>";
		
		RemoteMessageSender(closure, s);
	}
}